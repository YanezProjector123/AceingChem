{"version":3,"file":"static/js/101.8a8a25d6.chunk.js","mappings":"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","sources":["CovalentNamingInstructions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction getRandomCovalentProblem() {\r\n  // Simple random generator for demo\r\n  const problems = [\r\n    {\r\n      formula: 'CO2',\r\n      answer: 'Carbon Dioxide',\r\n      explanation: 'C = Carbon (no prefix), O2 = Dioxide (prefix di- for 2 oxygens).'\r\n    },\r\n    {\r\n      formula: 'N2O5',\r\n      answer: 'Dinitrogen Pentoxide',\r\n      explanation: 'N2 = Dinitrogen (prefix di- for 2 nitrogens), O5 = Pentoxide (prefix penta- for 5 oxygens).'\r\n    },\r\n    {\r\n      formula: 'NO',\r\n      answer: 'Nitrogen Monoxide',\r\n      explanation: 'N = Nitrogen (no prefix), O = Monoxide (prefix mono- for 1 oxygen).'\r\n    },\r\n    {\r\n      formula: 'PCl3',\r\n      answer: 'Phosphorus Trichloride',\r\n      explanation: 'P = Phosphorus (no prefix), Cl3 = Trichloride (prefix tri- for 3 chlorines).'\r\n    }\r\n  ];\r\n  return problems[Math.floor(Math.random()*problems.length)];\r\n}\r\n\r\nexport default function CovalentNamingInstructions({ onBack, onPeriodicTable, savedState, setSavedState }) {\r\n  // Ensure step is always valid (0, 1, or 2)\r\n  const initialStep = [0, 1, 2].includes(savedState?.step) ? savedState.step : 0;\r\n  const [step, setStep] = useState(initialStep);\r\n  const [input, setInput] = useState(savedState?.input ?? '');\r\n  const [feedback, setFeedback] = useState(savedState?.feedback ?? '');\r\n  const [problem, setProblem] = useState(savedState?.problem ?? getRandomCovalentProblem());\r\n\r\n\r\n  // Interactive example problem flow\r\n  const handleNext = () => {\r\n    if (step < 2) {\r\n      setStep(step + 1);\r\n      setInput('');\r\n      setFeedback('');\r\n      \r\n    } else {\r\n      setProblem(getRandomCovalentProblem());\r\n      setInput('');\r\n      setFeedback('');\r\n      \r\n      setStep(2);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim().toLowerCase() === problem.answer.toLowerCase()) {\r\n      setFeedback('✅ Correct!');\r\n    } else {\r\n      setFeedback('❌ Not quite. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-container fade-in slide-up\" style={{ textAlign: 'center', maxWidth: 600, margin: '0 auto' }}>\r\n      <h2 className=\"ptable-title\" style={{ letterSpacing: 1.5, fontWeight: 800, fontSize: '2.1em', textShadow: '0 2px 18px #e0b6f8aa, 0 1px 0 #fff', marginBottom: 18 }}>Covalent Naming Instructions Tutorial</h2>\r\n      <div className=\"glass-card\" style={{ padding: '30px 30px 18px 30px', fontSize: '1.18em', background: 'rgba(40,40,80,0.90)', color: '#e0e7ff', borderRadius: 18, boxShadow: '0 4px 32px #e0b6f855', marginBottom: 24 }}>\r\n        {step === 0 && (\r\n          <>\r\n            <div style={{ textAlign: 'left', marginBottom: 18 }}>\r\n              <b>What is a Covalent (Molecular) Compound?</b><br />\r\n              Covalent compounds are formed when two nonmetals share electrons. Examples: water (H<sub>2</sub>O), carbon dioxide (CO<sub>2</sub>).\r\n            </div>\r\n            <button className=\"ptable-btn\" style={{ marginTop: 18 }} onClick={handleNext}>Next</button>\r\n          </>\r\n        )}\r\n        {step === 1 && (\r\n          <>\r\n            <ol style={{ textAlign: 'left', paddingLeft: 28, marginBottom: 0 }}>\r\n              <li><b>Use prefixes</b> (mono-, di-, tri-, tetra-, etc.) to indicate the number of each type of atom.</li>\r\n              <li><b>First element:</b> Keep its name. <b>Never use \"mono-\" for the first element.</b></li>\r\n              <li><b>Second element:</b> Change the ending to <b>-ide</b> and always use a prefix, even if it's \"mono-\".</li>\r\n              <li><b>Drop the vowel</b> in the prefix if the element name begins with a vowel (e.g., monoxide, not monooxide).</li>\r\n            </ol>\r\n            <div style={{ marginTop: 22 }}>\r\n              <b>Step-by-Step Examples</b>\r\n              <div style={{ marginTop: 10, marginBottom: 10, padding: '16px', background: 'rgba(224,182,248,0.08)', borderRadius: 12 }}>\r\n                <b>Example 1: CO<sub>2</sub></b><br />\r\n                1. First element: C = Carbon (no prefix!)<br />\r\n                2. Second element: O<sub>2</sub> = Oxygen → \"oxide\", prefix is \"di-\"<br />\r\n                <span style={{ color: '#e0b6f8' }}>Answer: Carbon Dioxide</span>\r\n              </div>\r\n              <div style={{ marginBottom: 10, padding: '16px', background: 'rgba(224,182,248,0.08)', borderRadius: 12 }}>\r\n                <b>Example 2: NO</b><br />\r\n                1. First element: N = Nitrogen (no prefix!)<br />\r\n                2. Second element: O = Oxygen → \"oxide\", prefix is \"mono-\"<br />\r\n                <span style={{ color: '#e0b6f8' }}>Answer: Nitrogen Monoxide</span>\r\n                <button className=\"ptable-btn\" style={{ margin: '6px 0', background: '#23234a' }}\r\n                  onClick={() => onPeriodicTable && onPeriodicTable({ step, input, feedback, problem, showExplanation })}\r\n                >Show Periodic Table</button>\r\n              </div>\r\n              <div style={{ marginBottom: 10, padding: '16px', background: 'rgba(224,182,248,0.08)', borderRadius: 12 }}>\r\n                <b>Example 3: P<sub>2</sub>O<sub>5</sub></b><br />\r\n                1. First element: P<sub>2</sub> = Phosphorus, prefix is \"di-\"<br />\r\n                2. Second element: O<sub>5</sub> = Oxygen → \"oxide\", prefix is \"penta-\"<br />\r\n                <span style={{ color: '#e0b6f8' }}>Answer: Diphosphorus Pentoxide</span>\r\n              </div>\r\n            </div>\r\n            <button className=\"ptable-btn\" style={{ marginTop: 18 }} onClick={handleNext}>Next</button>\r\n          </>\r\n        )}\r\n        {step === 2 && (\r\n          <>\r\n            <div style={{ textAlign: 'left', marginBottom: 18 }}>\r\n              <b>Practice: What is the name of this compound?</b><br />\r\n              <span style={{ color: '#e0b6f8', fontSize: '1.2em' }}>{problem.formula}</span>\r\n            </div>\r\n            <form onSubmit={handleSubmit} style={{ marginBottom: 10 }}>\r\n              <input\r\n                className=\"glow-input\"\r\n                value={input}\r\n                onChange={e => setInput(e.target.value)}\r\n                placeholder=\"Type the name here\"\r\n                style={{ fontSize: '1.1em', width: '90%', maxWidth: 340, marginBottom: 10 }}\r\n              />\r\n              <div className=\"button-row\">\r\n                <button className=\"ptable-btn\" type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n            <div className=\"button-row\">\r\n              <button className=\"ptable-btn\" onClick={() => onPeriodicTable && onPeriodicTable({ step, input, feedback, problem })}>Show Periodic Table</button>\r\n              <button className=\"ptable-btn\" onClick={handleNext}>Try Another</button>\r\n              <button className=\"ptable-btn\" style={{ background: '#4e46a1' }} onClick={() => setStep(0)}>Review Tutorial</button>\r\n            </div>\r\n            {feedback && <div style={{ margin: '10px 0', fontWeight: 600, color: feedback.startsWith('✅') ? '#5eead4' : '#ff5ca7' }}>{feedback}</div>}\r\n            {feedback.startsWith('✅') && (\r\n              <div style={{ marginTop: 10, background: 'rgba(224,182,248,0.13)', borderRadius: 10, padding: '12px 16px', color: '#e0b6f8' }}>{problem.explanation}</div>\r\n            )}\r\n          </>\r\n        )}\r\n        {/* Fallback for out-of-range step values */}\r\n        {step !== 0 && step !== 1 && step !== 2 && (\r\n          <div style={{ padding: '24px', textAlign: 'center', color: '#ff5ca7' }}>\r\n            <b>Oops! Something went wrong.</b>\r\n            <div style={{ marginTop: 12 }}>Please go back and restart the tutorial.</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className=\"back-btn\" onClick={onBack} style={{ marginTop: 18, fontWeight: 600, fontSize: '1.08em', borderRadius: 10, boxShadow: '0 2px 10px #23234a55' }}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getRandomCovalentProblem","problems","formula","answer","explanation","Math","floor","random","length","CovalentNamingInstructions","_ref","_savedState$input","_savedState$feedback","_savedState$problem","onBack","onPeriodicTable","savedState","setSavedState","initialStep","includes","step","setStep","useState","input","setInput","feedback","setFeedback","problem","setProblem","handleNext","_jsxs","className","style","textAlign","maxWidth","margin","children","_jsx","letterSpacing","fontWeight","fontSize","textShadow","marginBottom","padding","background","color","borderRadius","boxShadow","_Fragment","marginTop","onClick","paddingLeft","showExplanation","onSubmit","e","preventDefault","trim","toLowerCase","value","onChange","target","placeholder","width","type","startsWith"],"sourceRoot":""}