{"version":3,"file":"static/js/161.6a101efa.chunk.js","mappings":"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","sources":["IonicNameToFormulaActivity.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport PeriodicTable from './PeriodicTable';\r\nimport PolyatomicIonReference from './PolyatomicIonReference';\r\n\r\n// Demo problems for Ionic Name to Formula\r\nfunction getRandomIonicNameToFormulaProblem() {\r\n  const problems = [\r\n    // Alkali metals (Group 1)\r\n    { name: 'Lithium fluoride', answer: 'LiF', explanation: '' },\r\n    { name: 'Rubidium fluoride', answer: 'RbF', explanation: '' },\r\n    { name: 'Rubidium chloride', answer: 'RbCl', explanation: '' },\r\n    { name: 'Rubidium bromide', answer: 'RbBr', explanation: '' },\r\n    { name: 'Rubidium iodide', answer: 'RbI', explanation: '' },\r\n    { name: 'Rubidium oxide', answer: 'Rb₂O', explanation: '' },\r\n    { name: 'Rubidium sulfide', answer: 'Rb₂S', explanation: '' },\r\n    { name: 'Rubidium nitride', answer: 'Rb₃N', explanation: '' },\r\n    { name: 'Cesium fluoride', answer: 'CsF', explanation: '' },\r\n    { name: 'Cesium chloride', answer: 'CsCl', explanation: '' },\r\n    { name: 'Cesium bromide', answer: 'CsBr', explanation: '' },\r\n    { name: 'Cesium iodide', answer: 'CsI', explanation: '' },\r\n    { name: 'Cesium oxide', answer: 'Cs₂O', explanation: '' },\r\n    { name: 'Cesium sulfide', answer: 'Cs₂S', explanation: '' },\r\n    { name: 'Cesium nitride', answer: 'Cs₃N', explanation: '' },\r\n    { name: 'Francium fluoride', answer: 'FrF', explanation: '' },\r\n    { name: 'Francium chloride', answer: 'FrCl', explanation: '' },\r\n    { name: 'Francium bromide', answer: 'FrBr', explanation: '' },\r\n    { name: 'Francium iodide', answer: 'FrI', explanation: '' },\r\n    { name: 'Francium oxide', answer: 'Fr₂O', explanation: '' },\r\n    { name: 'Francium sulfide', answer: 'Fr₂S', explanation: '' },\r\n    { name: 'Francium nitride', answer: 'Fr₃N', explanation: '' },\r\n    { name: 'Lithium chloride', answer: 'LiCl', explanation: '' },\r\n    { name: 'Lithium bromide', answer: 'LiBr', explanation: '' },\r\n    { name: 'Lithium iodide', answer: 'LiI', explanation: '' },\r\n    { name: 'Lithium oxide', answer: 'Li₂O', explanation: '' },\r\n    { name: 'Lithium sulfide', answer: 'Li₂S', explanation: '' },\r\n    { name: 'Lithium nitride', answer: 'Li₃N', explanation: '' },\r\n    { name: 'Sodium fluoride', answer: 'NaF', explanation: '' },\r\n    { name: 'Sodium chloride', answer: 'NaCl', explanation: '' },\r\n    { name: 'Sodium bromide', answer: 'NaBr', explanation: '' },\r\n    { name: 'Sodium iodide', answer: 'NaI', explanation: '' },\r\n    { name: 'Sodium oxide', answer: 'Na₂O', explanation: '' },\r\n    { name: 'Sodium sulfide', answer: 'Na₂S', explanation: '' },\r\n    { name: 'Sodium nitride', answer: 'Na₃N', explanation: '' },\r\n    { name: 'Potassium fluoride', answer: 'KF', explanation: '' },\r\n    { name: 'Potassium chloride', answer: 'KCl', explanation: '' },\r\n    { name: 'Potassium bromide', answer: 'KBr', explanation: '' },\r\n    { name: 'Potassium iodide', answer: 'KI', explanation: '' },\r\n    { name: 'Potassium oxide', answer: 'K₂O', explanation: '' },\r\n    { name: 'Potassium sulfide', answer: 'K₂S', explanation: '' },\r\n    { name: 'Potassium nitride', answer: 'K₃N', explanation: '' },\r\n    // Alkaline earth metals (Group 2)\r\n    { name: 'Radium fluoride', answer: 'RaF₂', explanation: '' },\r\n    { name: 'Radium chloride', answer: 'RaCl₂', explanation: '' },\r\n    { name: 'Radium bromide', answer: 'RaBr₂', explanation: '' },\r\n    { name: 'Radium iodide', answer: 'RaI₂', explanation: '' },\r\n    { name: 'Radium oxide', answer: 'RaO', explanation: '' },\r\n    { name: 'Radium sulfide', answer: 'RaS', explanation: '' },\r\n    { name: 'Radium nitride', answer: 'Ra₃N₂', explanation: '' },\r\n    { name: 'Magnesium fluoride', answer: 'MgF₂', explanation: '' },\r\n    { name: 'Magnesium chloride', answer: 'MgCl₂', explanation: '' },\r\n    { name: 'Magnesium bromide', answer: 'MgBr₂', explanation: '' },\r\n    { name: 'Magnesium iodide', answer: 'MgI₂', explanation: '' },\r\n    { name: 'Magnesium oxide', answer: 'MgO', explanation: '' },\r\n    { name: 'Magnesium sulfide', answer: 'MgS', explanation: '' },\r\n    { name: 'Magnesium nitride', answer: 'Mg₃N₂', explanation: '' },\r\n    { name: 'Calcium fluoride', answer: 'CaF₂', explanation: '' },\r\n    { name: 'Calcium chloride', answer: 'CaCl₂', explanation: '' },\r\n    { name: 'Calcium bromide', answer: 'CaBr₂', explanation: '' },\r\n    { name: 'Calcium iodide', answer: 'CaI₂', explanation: '' },\r\n    { name: 'Calcium oxide', answer: 'CaO', explanation: '' },\r\n    { name: 'Calcium sulfide', answer: 'CaS', explanation: '' },\r\n    { name: 'Calcium nitride', answer: 'Ca₃N₂', explanation: '' },\r\n    { name: 'Barium fluoride', answer: 'BaF₂', explanation: '' },\r\n    { name: 'Barium chloride', answer: 'BaCl₂', explanation: '' },\r\n    { name: 'Barium bromide', answer: 'BaBr₂', explanation: '' },\r\n    { name: 'Barium iodide', answer: 'BaI₂', explanation: '' },\r\n    { name: 'Barium oxide', answer: 'BaO', explanation: '' },\r\n    { name: 'Barium sulfide', answer: 'BaS', explanation: '' },\r\n    { name: 'Barium nitride', answer: 'Ba₃N₂', explanation: '' },\r\n    // Aluminum (Group 13)\r\n    { name: 'Aluminum fluoride', answer: 'AlF₃', explanation: '' },\r\n    { name: 'Aluminum chloride', answer: 'AlCl₃', explanation: '' },\r\n    { name: 'Aluminum bromide', answer: 'AlBr₃', explanation: '' },\r\n    { name: 'Aluminum iodide', answer: 'AlI₃', explanation: '' },\r\n    { name: 'Aluminum oxide', answer: 'Al₂O₃', explanation: '' },\r\n    { name: 'Aluminum sulfide', answer: 'Al₂S₃', explanation: '' },\r\n    { name: 'Aluminum nitride', answer: 'AlN', explanation: '' },\r\n    // Polyatomic ions\r\n    { name: 'Sodium sulfate', answer: 'Na₂SO₄', explanation: 'Sodium is Na⁺, sulfate is SO₄²⁻. Need 2 Na⁺ for each SO₄²⁻.' },\r\n    { name: 'Potassium nitrate', answer: 'KNO₃', explanation: 'Potassium is K⁺, nitrate is NO₃⁻.' },\r\n    { name: 'Calcium carbonate', answer: 'CaCO₃', explanation: 'Calcium is Ca²⁺, carbonate is CO₃²⁻.' },\r\n    { name: 'Ammonium chloride', answer: 'NH₄Cl', explanation: 'Ammonium is NH₄⁺, chloride is Cl⁻.' },\r\n    { name: 'Magnesium phosphate', answer: 'Mg₃(PO₄)₂', explanation: 'Magnesium is Mg²⁺, phosphate is PO₄³⁻. Need 3 Mg²⁺ for 2 PO₄³⁻.' },\r\n    { name: 'Aluminum hydroxide', answer: 'Al(OH)₃', explanation: 'Aluminum is Al³⁺, hydroxide is OH⁻. Need 3 OH⁻ for each Al³⁺.' },\r\n    { name: 'Calcium acetate', answer: 'Ca(C₂H₃O₂)₂', explanation: 'Calcium is Ca²⁺, acetate is C₂H₃O₂⁻. Need 2 acetates for each Ca²⁺.' },\r\n    { name: 'Potassium permanganate', answer: 'KMnO₄', explanation: 'Potassium is K⁺, permanganate is MnO₄⁻.' },\r\n    { name: 'Sodium bicarbonate', answer: 'NaHCO₃', explanation: 'Sodium is Na⁺, bicarbonate is HCO₃⁻.' },\r\n    { name: 'Ammonium sulfate', answer: '(NH₄)₂SO₄', explanation: 'Ammonium is NH₄⁺, sulfate is SO₄²⁻. Need 2 NH₄⁺ for each SO₄²⁻.' },\r\n    { name: 'Iron(III) nitrate', answer: 'Fe(NO₃)₃', explanation: 'Iron(III) is Fe³⁺, nitrate is NO₃⁻. Need 3 nitrates for each Fe³⁺.' },\r\n    { name: 'Copper(II) sulfate', answer: 'CuSO₄', explanation: 'Copper(II) is Cu²⁺, sulfate is SO₄²⁻.' },\r\n    { name: 'Barium chromate', answer: 'BaCrO₄', explanation: 'Barium is Ba²⁺, chromate is CrO₄²⁻.' },\r\n    { name: 'Lead(II) acetate', answer: 'Pb(C₂H₃O₂)₂', explanation: 'Lead(II) is Pb²⁺, acetate is C₂H₃O₂⁻.' },\r\n  ];\r\n  return problems[Math.floor(Math.random()*problems.length)];\r\n}\r\n\r\nexport default function IonicNameToFormulaActivity({ onBack, onPeriodicTable }) {\r\n  const [problem, setProblem] = useState(getRandomIonicNameToFormulaProblem());\r\n  const [input, setInput] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const inputRef = useRef(null);\r\n  const [showTable, setShowTable] = useState(false);\r\n  const [showPolyatomic, setShowPolyatomic] = useState(false);\r\n\r\n  function insertSubscript(sub) {\r\n    const el = inputRef.current;\r\n    if (!el) return;\r\n    const start = el.selectionStart;\r\n    const end = el.selectionEnd;\r\n    const newValue = input.slice(0, start) + sub + input.slice(end);\r\n    setInput(newValue);\r\n    setTimeout(() => {\r\n      el.focus();\r\n      el.setSelectionRange(start + 1, start + 1);\r\n    }, 0);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (input.trim().replace(/\\s/g,'').toLowerCase() === problem.answer.replace(/\\s/g,'').toLowerCase()) {\r\n      setFeedback('✅ Correct!');\r\n    } else {\r\n      let msg = '❌ Not quite.';\r\n      if (problem.explanation) {\r\n        msg += ' Explanation: ' + problem.explanation;\r\n      }\r\n      msg += '\\n\\uD83D\\uDCA1 Tip: For ionic compounds, write the cation (metal) first, then the anion (nonmetal or polyatomic ion). Balance the charges so the total is neutral. Use the Polyatomic Ion Reference if needed!';\r\n      setFeedback(msg);\r\n    }\r\n  }\r\n\r\n  function handleNext() {\r\n    setProblem(getRandomIonicNameToFormulaProblem());\r\n    setInput('');\r\n    setFeedback('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"center-container fade-in slide-up\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n      <span className=\"floating-chem-icon\" style={{ left: '8vw', top: '12vh', fontSize: '2.2em', animationDelay: '1.2s' }}>🧪</span>\r\n      <div className=\"glass-card pop-in\">\r\n        <h2 className=\"ptable-title\">Ionic Name → Formula Activity</h2>\r\n        <div style={{ margin: '20px 0', fontWeight: 600, fontSize: '1.13em' }}>Name: <span style={{ color: 'var(--accent)', fontWeight: 700 }}>{problem.name}</span></div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"glow-input\"\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            placeholder=\"Type the formula here\"\r\n            ref={inputRef}\r\n            style={{ width: '100%', maxWidth: 420 }}\r\n          />\r\n          <div className=\"subscript-btn-row\">\r\n            {['₀','₁','₂','₃','₄','₅','₆','₇','₈','₉'].map((sub, idx) => (\r\n              <button\r\n                key={sub}\r\n                type=\"button\"\r\n                className=\"subscript-btn\"\r\n                onClick={() => insertSubscript(sub)}\r\n                tabIndex={-1}\r\n              >{sub}</button>\r\n            ))}\r\n          </div>\r\n          <button className=\"ptable-btn\" type=\"submit\" style={{ width: '100%', marginBottom: 6 }}>Submit</button>\r\n        </form>\r\n        {feedback && (\r\n          <div className={feedback.startsWith('✅') ? 'feedback-correct' : 'feedback-incorrect'} style={{ whiteSpace: 'pre-line', fontSize: '1.08em', borderRadius: 16, margin: '16px 0', padding: '18px 16px', textAlign: 'left', maxWidth: 420, width: '100%', boxSizing: 'border-box', background: feedback.startsWith('✅') ? undefined : 'linear-gradient(90deg,#ff5ca7 0,#a259ec 100%)', color: feedback.startsWith('✅') ? undefined : '#fff', boxShadow: feedback.startsWith('✅') ? undefined : '0 2px 16px #a259ec55' }}>\r\n            {feedback}\r\n          </div>\r\n        )}\r\n        <button className=\"ptable-btn\" onClick={handleNext}>Try Another</button>\r\n        <button className=\"back-btn\" onClick={onBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getRandomIonicNameToFormulaProblem","problems","name","answer","explanation","Math","floor","random","length","IonicNameToFormulaActivity","_ref","onBack","onPeriodicTable","problem","setProblem","useState","input","setInput","feedback","setFeedback","inputRef","useRef","showTable","setShowTable","showPolyatomic","setShowPolyatomic","_jsxs","className","style","position","overflow","children","_jsx","left","top","fontSize","animationDelay","margin","fontWeight","color","onSubmit","e","preventDefault","trim","replace","toLowerCase","msg","value","onChange","target","placeholder","ref","width","maxWidth","map","sub","idx","type","onClick","el","current","start","selectionStart","end","selectionEnd","newValue","slice","setTimeout","focus","setSelectionRange","insertSubscript","tabIndex","marginBottom","startsWith","whiteSpace","borderRadius","padding","textAlign","boxSizing","background","undefined","boxShadow"],"sourceRoot":""}