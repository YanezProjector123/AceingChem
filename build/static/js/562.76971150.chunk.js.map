{"version":3,"file":"static/js/562.76971150.chunk.js","mappings":"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","sources":["MoleToMoleActivity.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StoichiometryActivity.css'; // UPDATED IMPORT\r\n\r\n// Helper to shuffle array for random question selection\r\nconst shuffleArray = (array) => {\r\n  let currentIndex = array.length, randomIndex;\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n};\r\n\r\n// Sample balanced chemical equations and problem types\r\nconst MOLE_CONVERSION_PROBLEMS = [\r\n  {\r\n    equation: \"2 H₂ + O₂ → 2 H₂O\",\r\n    stoichiometry: { H2: 2, O2: 1, H2O: 2 },\r\n    questionTypes: [\r\n      { from: 'H2', to: 'O2', text: (moles) => `If you have ${moles} moles of H₂, how many moles of O₂ are required?` },\r\n      { from: 'H2', to: 'H2O', text: (moles) => `If ${moles} moles of H₂ react completely, how many moles of H₂O are produced?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If you have ${moles} moles of O₂, how many moles of H₂O can be produced?` },\r\n      { from: 'O2', to: 'H2', text: (moles) => `To produce H₂O with ${moles} moles of O₂, how many moles of H₂ are needed?` },\r\n      { from: 'H2O', to: 'H2', text: (moles) => `To produce ${moles} moles of H₂O, how many moles of H₂ are required?` },\r\n      { from: 'H2O', to: 'O2', text: (moles) => `If ${moles} moles of H₂O are formed, how many moles of O₂ were consumed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"N₂ + 3 H₂ → 2 NH₃\",\r\n    stoichiometry: { N2: 1, H2: 3, NH3: 2 },\r\n    questionTypes: [\r\n      { from: 'N2', to: 'H2', text: (moles) => `To react completely with ${moles} moles of N₂, how many moles of H₂ are needed?` },\r\n      { from: 'H2', to: 'NH3', text: (moles) => `If ${moles} moles of H₂ react, how many moles of NH₃ are formed?` },\r\n      { from: 'N2', to: 'NH3', text: (moles) => `From ${moles} moles of N₂, how many moles of NH₃ can be synthesized?` },\r\n      { from: 'NH3', to: 'N2', text: (moles) => `To produce ${moles} moles of NH₃, how many moles of N₂ are required?` },\r\n      { from: 'NH3', to: 'H2', text: (moles) => `The formation of ${moles} moles of NH₃ requires how many moles of H₂?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"CH₄ + 2 O₂ → CO₂ + 2 H₂O\",\r\n    stoichiometry: { CH4: 1, O2: 2, CO2: 1, H2O: 2 },\r\n    questionTypes: [\r\n      { from: 'CH4', to: 'O2', text: (moles) => `How many moles of O₂ are needed to completely burn ${moles} moles of CH₄?` },\r\n      { from: 'CH4', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of CH₄ produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are consumed in the combustion of CH₄, how many moles of H₂O are formed?` },\r\n      { from: 'CO2', to: 'CH4', text: (moles) => `To produce ${moles} moles of CO₂ from CH₄ combustion, how many moles of CH₄ are needed?` },\r\n      { from: 'H2O', to: 'O2', text: (moles) => `If ${moles} moles of H₂O are produced by CH₄ combustion, how many moles of O₂ were used?` },\r\n    ]\r\n  },\r\n  // Added New Equations and Question Types:\r\n  {\r\n    equation: \"2 KClO₃ → 2 KCl + 3 O₂\", // Decomposition\r\n    stoichiometry: { KClO3: 2, KCl: 2, O2: 3 },\r\n    questionTypes: [\r\n      { from: 'KClO3', to: 'O2', text: (moles) => `If ${moles} moles of KClO₃ decompose, how many moles of O₂ are produced?` },\r\n      { from: 'KClO3', to: 'KCl', text: (moles) => `Decomposition of ${moles} moles of KClO₃ will yield how many moles of KCl?` },\r\n      { from: 'O2', to: 'KClO3', text: (moles) => `To produce ${moles} moles of O₂, how many moles of KClO₃ must decompose?` },\r\n      { from: 'KCl', to: 'O2', text: (moles) => `If ${moles} moles of KCl are formed, how many moles of O₂ are also produced?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Fe₂O₃ + 3 CO → 2 Fe + 3 CO₂\", // Redox in blast furnace\r\n    stoichiometry: { Fe2O3: 1, CO: 3, Fe: 2, CO2: 3 },\r\n    questionTypes: [\r\n      { from: 'Fe2O3', to: 'Fe', text: (moles) => `How many moles of Fe can be produced from ${moles} moles of Fe₂O₃?` },\r\n      { from: 'CO', to: 'CO2', text: (moles) => `If ${moles} moles of CO react, how many moles of CO₂ are formed?` },\r\n      { from: 'Fe2O3', to: 'CO', text: (moles) => `To react completely with ${moles} moles of Fe₂O₃, how many moles of CO are needed?` },\r\n      { from: 'Fe', to: 'CO', text: (moles) => `Production of ${moles} moles of Fe requires how many moles of CO?` },\r\n      { from: 'CO2', to: 'Fe2O3', text: (moles) => `If ${moles} moles of CO₂ are produced, how many moles of Fe₂O₃ reacted?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₃H₈ + 5 O₂ → 3 CO₂ + 4 H₂O\", // Propane combustion\r\n    stoichiometry: { C3H8: 1, O2: 5, CO2: 3, H2O: 4 },\r\n    questionTypes: [\r\n      { from: 'C3H8', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of propane (C₃H₈) produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are consumed, how many moles of H₂O are formed during propane combustion?` },\r\n      { from: 'C3H8', to: 'O2', text: (moles) => `How many moles of O₂ are required to burn ${moles} moles of C₃H₈ completely?` },\r\n      { from: 'H2O', to: 'C3H8', text: (moles) => `If ${moles} moles of H₂O are produced from burning C₃H₈, how much C₃H₈ was used?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 Al + 3 Cl₂ → 2 AlCl₃\", // Synthesis\r\n    stoichiometry: { Al: 2, Cl2: 3, AlCl3: 2 },\r\n    questionTypes: [\r\n      { from: 'Al', to: 'AlCl3', text: (moles) => `Reaction of ${moles} moles of Al will produce how many moles of AlCl₃?` },\r\n      { from: 'Cl2', to: 'AlCl3', text: (moles) => `If ${moles} moles of Cl₂ react, how many moles of AlCl₃ are formed?` },\r\n      { from: 'AlCl3', to: 'Al', text: (moles) => `To synthesize ${moles} moles of AlCl₃, how many moles of Al are needed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Zn + 2 HCl → ZnCl₂ + H₂\", // Single displacement\r\n    stoichiometry: { Zn: 1, HCl: 2, ZnCl2: 1, H2: 1 },\r\n    questionTypes: [\r\n      { from: 'Zn', to: 'H2', text: (moles) => `If ${moles} moles of Zn react with HCl, how many moles of H₂ are produced?` },\r\n      { from: 'HCl', to: 'ZnCl2', text: (moles) => `Reaction of ${moles} moles of HCl will produce how many moles of ZnCl₂?` },\r\n      { from: 'ZnCl2', to: 'HCl', text: (moles) => `Formation of ${moles} moles of ZnCl₂ requires how many moles of HCl?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"AgNO₃ + NaCl → AgCl + NaNO₃\", // Double displacement (precipitation)\r\n    stoichiometry: { AgNO3: 1, NaCl: 1, AgCl: 1, NaNO3: 1 },\r\n    questionTypes: [\r\n      { from: 'AgNO3', to: 'AgCl', text: (moles) => `If ${moles} moles of AgNO₃ react, how many moles of AgCl precipitate?` },\r\n      { from: 'NaCl', to: 'NaNO3', text: (moles) => `Reaction of ${moles} moles of NaCl will produce how many moles of NaNO₃?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₆H₁₂O₆ + 6 O₂ → 6 CO₂ + 6 H₂O\", // Glucose combustion\r\n    stoichiometry: { C6H12O6: 1, O2: 6, CO2: 6, H2O: 6 },\r\n    questionTypes: [\r\n      { from: 'C6H12O6', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of glucose (C₆H₁₂O₆) produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are used to burn glucose, how many moles of H₂O are formed?` },\r\n      { from: 'CO2', to: 'O2', text: (moles) => `Production of ${moles} moles of CO₂ from glucose requires how many moles of O₂?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 SO₂ + O₂ → 2 SO₃\", // Sulfur dioxide oxidation\r\n    stoichiometry: { SO2: 2, O2: 1, SO3: 2 },\r\n    questionTypes: [\r\n      { from: 'SO2', to: 'SO3', text: (moles) => `If ${moles} moles of SO₂ react, how many moles of SO₃ are formed?` },\r\n      { from: 'O2', to: 'SO3', text: (moles) => `Reaction of ${moles} moles of O₂ with SO₂ produces how many moles of SO₃?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"P₄ + 5 O₂ → P₄O₁₀\", // Phosphorus combustion\r\n    stoichiometry: { P4: 1, O2: 5, P4O10: 1 },\r\n    questionTypes: [\r\n      { from: 'P4', to: 'P4O10', text: (moles) => `Combustion of ${moles} moles of P₄ produces how many moles of P₄O₁₀?` },\r\n      { from: 'O2', to: 'P4O10', text: (moles) => `If ${moles} moles of O₂ react to form P₄O₁₀, how many moles of P₄O₁₀ are made?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"WO₃ + 3 H₂ → W + 3 H₂O\", // Tungsten oxide reduction\r\n    stoichiometry: { WO3: 1, H2: 3, W: 1, H2O: 3 },\r\n    questionTypes: [\r\n      { from: 'WO3', to: 'W', text: (moles) => `Reduction of ${moles} moles of WO₃ with H₂ yields how many moles of W?` },\r\n      { from: 'H2', to: 'H2O', text: (moles) => `If ${moles} moles of H₂ are used to reduce WO₃, how many moles of H₂O are produced?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₂H₅OH + 3 O₂ → 2 CO₂ + 3 H₂O\", // Ethanol combustion\r\n    stoichiometry: { C2H5OH: 1, O2: 3, CO2: 2, H2O: 3 },\r\n    questionTypes: [\r\n      { from: 'C2H5OH', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of ethanol (C₂H₅OH) produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are consumed to burn ethanol, how many moles of H₂O are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"SiCl₄ + 2 Mg → Si + 2 MgCl₂\", // Silicon production\r\n    stoichiometry: { SiCl4: 1, Mg: 2, Si: 1, MgCl2: 2 },\r\n    questionTypes: [\r\n      { from: 'SiCl4', to: 'Si', text: (moles) => `Reaction of ${moles} moles of SiCl₄ with Mg produces how many moles of Si?` },\r\n      { from: 'Mg', to: 'MgCl2', text: (moles) => `If ${moles} moles of Mg react, how many moles of MgCl₂ are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"4 Fe + 3 O₂ → 2 Fe₂O₃\", // Rusting of Iron\r\n    stoichiometry: { Fe: 4, O2: 3, Fe2O3: 2 },\r\n    questionTypes: [\r\n      { from: 'Fe', to: 'Fe2O3', text: (moles) => `If ${moles} moles of Fe rust completely, how many moles of Fe₂O₃ are formed?` },\r\n      { from: 'O2', to: 'Fe2O3', text: (moles) => `Reaction of ${moles} moles of O₂ with Fe produces how many moles of Fe₂O₃?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 Na + Cl₂ → 2 NaCl\", // Sodium and Chlorine reaction\r\n    stoichiometry: { Na: 2, Cl2: 1, NaCl: 2 },\r\n    questionTypes: [\r\n        { from: 'Na', to: 'NaCl', text: (moles) => `How many moles of NaCl are produced from ${moles} moles of Na?` },\r\n        { from: 'Cl2', to: 'NaCl', text: (moles) => `If ${moles} moles of Cl₂ react, how many moles of NaCl are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Mg + I₂ → MgI₂\", // Magnesium and Iodine reaction\r\n    stoichiometry: { Mg: 1, I2: 1, MgI2: 1 },\r\n    questionTypes: [\r\n        { from: 'Mg', to: 'MgI2', text: (moles) => `Reaction of ${moles} moles of Mg with I₂ produces how many moles of MgI₂?` },\r\n        { from: 'I2', to: 'MgI2', text: (moles) => `How many moles of MgI₂ can be formed from ${moles} moles of I₂?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 C₂H₂ + 5 O₂ → 4 CO₂ + 2 H₂O\", // Acetylene combustion\r\n    stoichiometry: { C2H2: 2, O2: 5, CO2: 4, H2O: 2 },\r\n    questionTypes: [\r\n        { from: 'C2H2', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of acetylene (C₂H₂) produces how many moles of CO₂?` },\r\n        { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are used to burn C₂H₂, how many moles of H₂O are formed?` },\r\n        { from: 'C2H2', to: 'O2', text: (moles) => `How many moles of O₂ are needed to completely combust ${moles} moles of C₂H₂?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"CS₂ + 3 O₂ → CO₂ + 2 SO₂\", // Carbon disulfide combustion\r\n    stoichiometry: { CS2: 1, O2: 3, CO2: 1, SO2: 2 },\r\n    questionTypes: [\r\n        { from: 'CS2', to: 'CO2', text: (moles) => `If ${moles} moles of CS₂ are burned, how many moles of CO₂ are produced?` },\r\n        { from: 'O2', to: 'SO2', text: (moles) => `Combustion using ${moles} moles of O₂ will produce how many moles of SO₂ (from CS₂)?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Sn + 2 Cl₂ → SnCl₄\", // Tin (IV) chloride synthesis\r\n    stoichiometry: { Sn: 1, Cl2: 2, SnCl4: 1 },\r\n    questionTypes: [\r\n        { from: 'Sn', to: 'SnCl4', text: (moles) => `How many moles of SnCl₄ can be made from ${moles} moles of Sn?` },\r\n        { from: 'Cl2', to: 'SnCl4', text: (moles) => `If ${moles} moles of Cl₂ react, how many moles of SnCl₄ are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"3 CaCl₂ + 2 Na₃PO₄ → Ca₃(PO₄)₂ + 6 NaCl\", // Calcium phosphate precipitation\r\n    stoichiometry: { CaCl2: 3, Na3PO4: 2, Ca3PO4_2: 1, NaCl: 6 }, // Note: Ca3(PO4)2 key needs to be valid JS identifier\r\n    questionTypes: [\r\n        { from: 'CaCl2', to: 'Ca3PO4_2', text: (moles) => `Reaction of ${moles} moles of CaCl₂ produces how many moles of Ca₃(PO₄)₂?` },\r\n        { from: 'Na3PO4', to: 'NaCl', text: (moles) => `If ${moles} moles of Na₃PO₄ react, how many moles of NaCl are formed?` },\r\n    ]\r\n  },\r\n  // ----- NEW EQUATIONS START HERE -----\r\n  {\r\n    equation: \"2 Al(OH)₃ + 3 H₂SO₄ → Al₂(SO₄)₃ + 6 H₂O\", // Acid-Base Neutralization\r\n    stoichiometry: { AlOH3: 2, H2SO4: 3, Al2SO4_3: 1, H2O: 6 }, // Key Al(OH)3 as AlOH3, Al2(SO4)3 as Al2SO4_3\r\n    questionTypes: [\r\n      { from: 'AlOH3', to: 'H2O', text: (moles) => `If ${moles} moles of Al(OH)₃ react, how many moles of H₂O are formed?` },\r\n      { from: 'H2SO4', to: 'Al2SO4_3', text: (moles) => `Reaction of ${moles} moles of H₂SO₄ will produce how many moles of Al₂(SO₄)₃?` },\r\n      { from: 'Al2SO4_3', to: 'AlOH3', text: (moles) => `To produce ${moles} moles of Al₂(SO₄)₃, how many moles of Al(OH)₃ are needed?` },\r\n      { from: 'H2O', to: 'H2SO4', text: (moles) => `Formation of ${moles} moles of H₂O requires how many moles of H₂SO₄?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₂H₄ + 3 O₂ → 2 CO₂ + 2 H₂O\", // Ethene Combustion\r\n    stoichiometry: { C2H4: 1, O2: 3, CO2: 2, H2O: 2 },\r\n    questionTypes: [\r\n      { from: 'C2H4', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of ethene (C₂H₄) produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are used to burn ethene, how many moles of H₂O are formed?` },\r\n      { from: 'CO2', to: 'C2H4', text: (moles) => `To produce ${moles} moles of CO₂ from ethene combustion, how much C₂H₄ was burned?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 NaBr + Cl₂ → 2 NaCl + Br₂\", // Single Displacement (Halogen)\r\n    stoichiometry: { NaBr: 2, Cl2: 1, NaCl: 2, Br2: 1 },\r\n    questionTypes: [\r\n      { from: 'NaBr', to: 'NaCl', text: (moles) => `If ${moles} moles of NaBr react with chlorine, how many moles of NaCl are formed?` },\r\n      { from: 'Cl2', to: 'Br2', text: (moles) => `Reaction of ${moles} moles of Cl₂ will produce how many moles of Br₂?` },\r\n      { from: 'Br2', to: 'NaBr', text: (moles) => `To produce ${moles} moles of Br₂, how many moles of NaBr are required?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"H₂ + Cl₂ → 2 HCl\", // Hydrogen and Chlorine Synthesis\r\n    stoichiometry: { H2: 1, Cl2: 1, HCl: 2 },\r\n    questionTypes: [\r\n      { from: 'H2', to: 'HCl', text: (moles) => `How many moles of HCl are produced from ${moles} moles of H₂ reacting with Cl₂?` },\r\n      { from: 'Cl2', to: 'HCl', text: (moles) => `If ${moles} moles of Cl₂ react with H₂, how many moles of HCl are formed?` },\r\n      { from: 'HCl', to: 'H2', text: (moles) => `To produce ${moles} moles of HCl, how many moles of H₂ are needed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 HgO → 2 Hg + O₂\", // Mercury(II) Oxide Decomposition\r\n    stoichiometry: { HgO: 2, Hg: 2, O2: 1 },\r\n    questionTypes: [\r\n      { from: 'HgO', to: 'Hg', text: (moles) => `Decomposition of ${moles} moles of HgO produces how many moles of Hg?` },\r\n      { from: 'HgO', to: 'O2', text: (moles) => `How many moles of O₂ are formed from the decomposition of ${moles} moles of HgO?` },\r\n      { from: 'O2', to: 'HgO', text: (moles) => `To produce ${moles} moles of O₂, how many moles of HgO must decompose?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"BaCl₂ + Na₂SO₄ → BaSO₄ + 2 NaCl\", // Precipitation Reaction\r\n    stoichiometry: { BaCl2: 1, Na2SO4: 1, BaSO4: 1, NaCl: 2 },\r\n    questionTypes: [\r\n      { from: 'BaCl2', to: 'BaSO4', text: (moles) => `If ${moles} moles of BaCl₂ react, how many moles of BaSO₄ precipitate?` },\r\n      { from: 'Na2SO4', to: 'NaCl', text: (moles) => `Reaction of ${moles} moles of Na₂SO₄ produces how many moles of NaCl?` },\r\n      { from: 'BaSO4', to: 'Na2SO4', text: (moles) => `Formation of ${moles} moles of BaSO₄ implies how many moles of Na₂SO₄ reacted?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"NH₄NO₃ → N₂O + 2 H₂O\", // Ammonium Nitrate Decomposition\r\n    stoichiometry: { NH4NO3: 1, N2O: 1, H2O: 2 },\r\n    questionTypes: [\r\n      { from: 'NH4NO3', to: 'N2O', text: (moles) => `Decomposition of ${moles} moles of NH₄NO₃ produces how many moles of N₂O?` },\r\n      { from: 'NH4NO3', to: 'H2O', text: (moles) => `How many moles of H₂O are formed from ${moles} moles of NH₄NO₃ decomposing?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₆H₆ + Cl₂ → C₆H₅Cl + HCl\", // Benzene Chlorination (Simplified)\r\n    stoichiometry: { C6H6: 1, Cl2: 1, C6H5Cl: 1, HCl: 1 },\r\n    questionTypes: [\r\n      { from: 'C6H6', to: 'C6H5Cl', text: (moles) => `Chlorination of ${moles} moles of benzene (C₆H₆) produces how many moles of C₆H₅Cl?` },\r\n      { from: 'Cl2', to: 'HCl', text: (moles) => `If ${moles} moles of Cl₂ are used to chlorinate benzene, how many moles of HCl are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 KBr + I₂ → 2 KI + Br₂\", // Halogen displacement (less reactive I2)\r\n    stoichiometry: { KBr: 2, I2: 1, KI: 2, Br2: 1 }, // Note: This reaction typically does not proceed spontaneously as written.\r\n    questionTypes: [\r\n        { from: 'KBr', to: 'KI', text: (moles) => `If ${moles} moles of KBr react, how many moles of KI could be formed (theoretically)?` },\r\n        { from: 'I2', to: 'Br2', text: (moles) => `Reaction of ${moles} moles of I₂ would produce how many moles of Br₂ (theoretically)?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"SiO₂ + 2 C → Si + 2 CO\", // Silicon production from sand\r\n    stoichiometry: { SiO2: 1, C: 2, Si: 1, CO: 2 },\r\n    questionTypes: [\r\n      { from: 'SiO2', to: 'Si', text: (moles) => `Reduction of ${moles} moles of SiO₂ with carbon yields how many moles of Si?` },\r\n      { from: 'C', to: 'CO', text: (moles) => `If ${moles} moles of C are used to reduce SiO₂, how many moles of CO are produced?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Pb(NO₃)₂ + 2 KI → PbI₂ + 2 KNO₃\", // Lead(II) Iodide Precipitation\r\n    stoichiometry: { PbNO3_2: 1, KI: 2, PbI2: 1, KNO3: 2 }, // Key Pb(NO3)2 as PbNO3_2\r\n    questionTypes: [\r\n      { from: 'PbNO3_2', to: 'PbI2', text: (moles) => `If ${moles} moles of Pb(NO₃)₂ react, how many moles of PbI₂ precipitate?` },\r\n      { from: 'KI', to: 'KNO3', text: (moles) => `Reaction of ${moles} moles of KI produces how many moles of KNO₃?` },\r\n      { from: 'PbI2', to: 'KI', text: (moles) => `To precipitate ${moles} moles of PbI₂, how many moles of KI are needed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"2 HCl + Mg(OH)₂ → MgCl₂ + 2 H₂O\", // Acid-Base Neutralization\r\n    stoichiometry: { HCl: 2, MgOH2: 1, MgCl2: 1, H2O: 2 }, // Key Mg(OH)2 as MgOH2\r\n    questionTypes: [\r\n      { from: 'HCl', to: 'H2O', text: (moles) => `Neutralization of Mg(OH)₂ with ${moles} moles of HCl produces how many moles of H₂O?` },\r\n      { from: 'MgOH2', to: 'MgCl2', text: (moles) => `If ${moles} moles of Mg(OH)₂ react, how many moles of MgCl₂ are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"C₅H₁₂ + 8 O₂ → 5 CO₂ + 6 H₂O\", // Pentane Combustion\r\n    stoichiometry: { C5H12: 1, O2: 8, CO2: 5, H2O: 6 },\r\n    questionTypes: [\r\n      { from: 'C5H12', to: 'CO2', text: (moles) => `Combustion of ${moles} moles of pentane (C₅H₁₂) produces how many moles of CO₂?` },\r\n      { from: 'O2', to: 'H2O', text: (moles) => `If ${moles} moles of O₂ are consumed to burn pentane, how many moles of H₂O are formed?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"H₂SO₄ + 2 NaOH → Na₂SO₄ + 2 H₂O\", // Sulfuric Acid and Sodium Hydroxide\r\n    stoichiometry: { H2SO4: 1, NaOH: 2, Na2SO4: 1, H2O: 2 },\r\n    questionTypes: [\r\n      { from: 'H2SO4', to: 'Na2SO4', text: (moles) => `If ${moles} moles of H₂SO₄ react, how many moles of Na₂SO₄ are produced?` },\r\n      { from: 'NaOH', to: 'H2O', text: (moles) => `Reaction of ${moles} moles of NaOH produces how many moles of H₂O?` },\r\n    ]\r\n  },\r\n  {\r\n    equation: \"Fe + S → FeS\", // Iron and Sulfur Synthesis\r\n    stoichiometry: { Fe: 1, S: 1, FeS: 1 },\r\n    questionTypes: [\r\n      { from: 'Fe', to: 'FeS', text: (moles) => `Reaction of ${moles} moles of Fe with sulfur produces how many moles of FeS?` },\r\n      { from: 'S', to: 'FeS', text: (moles) => `If ${moles} moles of S react with iron, how many moles of FeS are formed?` },\r\n    ]\r\n  }\r\n  // ----- NEW EQUATIONS END HERE -----\r\n  // Add more equations and question types here\r\n];\r\n\r\nconst MoleToMoleActivity = ({ onBack, savedState, setSavedState, onPeriodicTable }) => {\r\n  const [currentProblemSet, setCurrentProblemSet] = useState(() => savedState?.currentProblemSet || shuffleArray([...MOLE_CONVERSION_PROBLEMS]));\r\n  const [problemIndex, setProblemIndex] = useState(() => savedState?.problemIndex || 0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(() => savedState?.userAnswer || '');\r\n  const [feedback, setFeedback] = useState(() => savedState?.feedback || null);\r\n  const [showFeedback, setShowFeedback] = useState(() => savedState?.showFeedback || false);\r\n  const [score, setScore] = useState(() => savedState?.score || 0);\r\n  const [questionsAttempted, setQuestionsAttempted] = useState(() => savedState?.questionsAttempted || 0);\r\n\r\n  const generateQuestion = useCallback(() => {\r\n    if (problemIndex >= currentProblemSet.length) {\r\n      console.log(\"Completed all problems in this set!\");\r\n      setFeedback({ type: 'info', message: `Set complete! Your score: ${score}/${questionsAttempted}. Starting new set.` });\r\n      setShowFeedback(true);\r\n      return; \r\n    }\r\n\r\n    const problem = currentProblemSet[problemIndex];\r\n    const questionTypeIndex = Math.floor(Math.random() * problem.questionTypes.length);\r\n    const questionTemplate = problem.questionTypes[questionTypeIndex];\r\n    \r\n    const givenMoles = parseFloat((Math.random() * 9 + 1).toFixed(1)); \r\n    const fromSubstance = questionTemplate.from;\r\n    const toSubstance = questionTemplate.to;\r\n\r\n    const molesFromCoefficient = problem.stoichiometry[fromSubstance];\r\n    const molesToCoefficient = problem.stoichiometry[toSubstance];\r\n    \r\n    const correctAnswer = (givenMoles / molesFromCoefficient) * molesToCoefficient;\r\n\r\n    setCurrentQuestion({\r\n      equation: problem.equation,\r\n      text: questionTemplate.text(givenMoles),\r\n      correctAnswer: parseFloat(correctAnswer.toFixed(3)),\r\n      fromSubstance,\r\n      toSubstance,\r\n      givenMoles,\r\n      molesFromCoefficient, \r\n      molesToCoefficient   \r\n    });\r\n    \r\n    setUserAnswer('');\r\n  }, [problemIndex, currentProblemSet, score, questionsAttempted]);\r\n\r\n  useEffect(() => {\r\n    generateQuestion();\r\n  }, [generateQuestion, problemIndex]); // Regenerate if problemIndex changes (e.g. next question)\r\n\r\n  // Save state whenever key variables change\r\n  useEffect(() => {\r\n    if (setSavedState) {\r\n      setSavedState({\r\n        currentProblemSet,\r\n        problemIndex,\r\n        score,\r\n        questionsAttempted,\r\n        userAnswer, \r\n        feedback,   \r\n        showFeedback \r\n      });\r\n    }\r\n  }, [currentProblemSet, problemIndex, score, questionsAttempted, userAnswer, feedback, showFeedback, setSavedState]);\r\n\r\n\r\n  const checkAnswer = (answerString) => {\r\n    if (!currentQuestion || showFeedback) return; // Don't check if no question or feedback shown\r\n\r\n    const answer = parseFloat(answerString);\r\n    if (isNaN(answer)) {\r\n        setFeedback({ type: 'incorrect', message: 'Please enter a valid number.' });\r\n        setShowFeedback(true);\r\n        return;\r\n    }\r\n\r\n    setQuestionsAttempted(prev => prev + 1);\r\n\r\n    if (Math.abs(answer - currentQuestion.correctAnswer) < 0.01) {\r\n      setFeedback({ type: 'correct', message: 'Correct! Great job!' });\r\n      setScore(prev => prev + 1);\r\n    } else {\r\n      const { equation, fromSubstance, toSubstance, givenMoles, correctAnswer, molesFromCoefficient, molesToCoefficient } = currentQuestion;\r\n      \r\n      const explanation = `Let's break it down for the reaction: ${equation}\\n\\n` +\r\n        `1. You started with: ${givenMoles} moles of ${fromSubstance}.\\n` +\r\n        `2. The problem asks for moles of ${toSubstance}.\\n` +\r\n        `3. From the balanced equation, the stoichiometric coefficients are:\\n` +\r\n        `   - ${fromSubstance}: ${molesFromCoefficient}\\n` +\r\n        `   - ${toSubstance}: ${molesToCoefficient}\\n` +\r\n        `4. This means the mole ratio of ${fromSubstance} to ${toSubstance} is ${molesFromCoefficient} : ${molesToCoefficient}.\\n` +\r\n        `5. To calculate the moles of ${toSubstance}:\\n` +\r\n        `   (${givenMoles} moles ${fromSubstance}) * (${molesToCoefficient} moles ${toSubstance} / ${molesFromCoefficient} moles ${fromSubstance})\\n` +\r\n        `   = ${correctAnswer.toFixed(3)} moles of ${toSubstance}.\\n\\n` +\r\n        `So, the correct answer is ${correctAnswer.toFixed(3)} moles.`;\r\n\r\n      setFeedback({ \r\n        type: 'incorrect', \r\n        message: `Not quite.\\n${explanation}`\r\n      });\r\n    }\r\n    setShowFeedback(true);\r\n  };\r\n\r\n  const handleUserSubmit = () => {\r\n    checkAnswer(userAnswer);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setShowFeedback(false);\r\n    setFeedback(null);\r\n\r\n    if (problemIndex >= currentProblemSet.length -1 && feedback?.type === 'info' && feedback.message.startsWith('Set complete!')) {\r\n        setCurrentProblemSet(shuffleArray([...MOLE_CONVERSION_PROBLEMS]));\r\n        setProblemIndex(0);\r\n    } else if (problemIndex < currentProblemSet.length) {\r\n        setProblemIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  if (showFeedback && feedback?.type === 'info' && feedback.message.startsWith('Set complete!')) {\r\n    return (\r\n      <div className=\"activity-container\">\r\n        <div className=\"activity-card\" style={{ textAlign: 'center' }}>\r\n          <h2 className=\"activity-title\">Set Complete!</h2>\r\n          <div className={`feedback-container feedback-${feedback.type}`}>\r\n            <h3>Info:</h3>\r\n            <p>{feedback.message}</p>\r\n          </div>\r\n          <div className=\"button-row\">\r\n            <button className=\"activity-btn\" onClick={handleNextQuestion}>Start New Set</button>\r\n            <button className=\"back-btn\" onClick={onBack}>Back to Topics</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!currentQuestion) {\r\n    return (\r\n      <div className=\"activity-container\">\r\n        <div className=\"activity-card\" style={{ textAlign: 'center' }}>\r\n          <p className=\"question-text\">Loading mole conversion question...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"activity-container\">\r\n      <div className=\"activity-card\">\r\n        <h2 className=\"activity-title\">Mole-to-Mole Conversions</h2>\r\n        \r\n        <div className=\"question-area\">\r\n          <p className=\"question-equation\">\r\n            {currentQuestion.equation.split(' ').map((part, index) => \r\n              isNaN(parseInt(part)) ? <span key={index}>{part} </span> : <strong key={index}>{part} </strong>\r\n            )}\r\n          </p>\r\n          <p className=\"question-text\">{currentQuestion.text}</p>\r\n        </div>\r\n\r\n        <input \r\n          type=\"number\"\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          placeholder=\"Your answer (moles)\"\r\n          className=\"activity-input\"\r\n          style={{ margin: '10px 0 20px 0' }}\r\n          disabled={showFeedback}\r\n        />\r\n\r\n        {showFeedback && feedback && (\r\n          <div \r\n            className={`feedback-container feedback-${feedback.type}`}\r\n          >\r\n            <h3>\r\n              {feedback.type === 'correct' ? 'Correct!' : feedback.type === 'incorrect' ? 'Incorrect.' : 'Info:'}\r\n            </h3>\r\n            <p>\r\n              {feedback.message}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"button-row\">\r\n          {showFeedback ? (\r\n            <button className=\"activity-btn\" onClick={handleNextQuestion}>Next Question</button>\r\n          ) : (\r\n            <button className=\"activity-btn\" onClick={handleUserSubmit} disabled={!userAnswer || showFeedback}>Submit</button>\r\n          )}\r\n          <button className=\"activity-btn\" onClick={onPeriodicTable}>Periodic Table</button>\r\n          <button className=\"back-btn\" onClick={onBack}>Back to Topics</button>\r\n        </div>\r\n        <p className=\"score-display\">Score: {score} / {questionsAttempted}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoleToMoleActivity.propTypes = {\r\n  onBack: PropTypes.func.isRequired,\r\n  savedState: PropTypes.object,\r\n  setSavedState: PropTypes.func,\r\n  onPeriodicTable: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoleToMoleActivity; "],"names":["shuffleArray","array","randomIndex","currentIndex","length","Math","floor","random","MOLE_CONVERSION_PROBLEMS","equation","stoichiometry","H2","O2","H2O","questionTypes","from","to","text","moles","N2","NH3","CH4","CO2","KClO3","KCl","Fe2O3","CO","Fe","C3H8","Al","Cl2","AlCl3","Zn","HCl","ZnCl2","AgNO3","NaCl","AgCl","NaNO3","C6H12O6","SO2","SO3","P4","P4O10","WO3","W","C2H5OH","SiCl4","Mg","Si","MgCl2","Na","I2","MgI2","C2H2","CS2","Sn","SnCl4","CaCl2","Na3PO4","Ca3PO4_2","AlOH3","H2SO4","Al2SO4_3","C2H4","NaBr","Br2","HgO","Hg","BaCl2","Na2SO4","BaSO4","NH4NO3","N2O","C6H6","C6H5Cl","KBr","KI","SiO2","C","PbNO3_2","PbI2","KNO3","MgOH2","C5H12","NaOH","S","FeS","_ref","onBack","savedState","setSavedState","onPeriodicTable","currentProblemSet","setCurrentProblemSet","useState","problemIndex","setProblemIndex","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","showFeedback","setShowFeedback","score","setScore","questionsAttempted","setQuestionsAttempted","generateQuestion","useCallback","console","log","type","message","problem","questionTypeIndex","questionTemplate","givenMoles","parseFloat","toFixed","fromSubstance","toSubstance","molesFromCoefficient","molesToCoefficient","correctAnswer","useEffect","handleNextQuestion","startsWith","prev","_jsx","className","children","_jsxs","style","textAlign","onClick","split","map","part","index","isNaN","parseInt","value","onChange","e","target","placeholder","margin","disabled","handleUserSubmit","answerString","answer","abs","explanation","checkAnswer"],"sourceRoot":""}