{"version":3,"file":"static/js/691.34cea819.chunk.js","mappings":"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","sources":["IonicNamingInstructions.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PeriodicTable from './PeriodicTable';\r\n\r\nfunction getRandomIonicProblem() {\r\n  // Very simple random generator for demo purposes\r\n  const problems = [\r\n    { formula: 'NaCl', answer: 'Sodium Chloride', explanation: 'Na is sodium (cation), Cl is chloride (anion). Name the cation, then the anion with -ide.' },\r\n    { formula: 'MgO', answer: 'Magnesium Oxide', explanation: 'Mg is magnesium (cation), O is oxide (anion). Name the cation, then the anion with -ide.' },\r\n    { formula: 'KNO3', answer: 'Potassium Nitrate', explanation: 'K is potassium (cation), NO₃ is nitrate (polyatomic anion). Use the name of the polyatomic ion as is.' },\r\n    { formula: 'FeCl2', answer: 'Iron(II) Chloride', explanation: 'Fe is iron, a transition metal. Cl is chloride. The (II) shows iron is +2 here.' },\r\n    { formula: 'CaSO4', answer: 'Calcium Sulfate', explanation: 'Ca is calcium (cation), SO₄ is sulfate (polyatomic anion).' }\r\n  ];\r\n  return problems[Math.floor(Math.random()*problems.length)];\r\n}\r\n\r\nexport default function IonicNamingInstructions({ onBack, onPeriodicTable, savedState, setSavedState }) {\r\n  // Ensure step is always valid (0, 1, or 2)\r\n  const initialStep = [0, 1, 2].includes(savedState?.step) ? savedState.step : 0;\r\n  const [step, setStep] = useState(initialStep);\r\n  const [input, setInput] = useState(savedState?.input ?? '');\r\n  const [feedback, setFeedback] = useState(savedState?.feedback ?? '');\r\n  const [problem, setProblem] = useState(savedState?.problem ?? getRandomIonicProblem());\r\n\r\n\r\n  const handleNext = () => {\r\n    if (step < 2) {\r\n      setStep(step + 1);\r\n      setInput('');\r\n      setFeedback('');\r\n      \r\n    } else {\r\n      // Stay at step 2 and load a new problem\r\n      setProblem(getRandomIonicProblem());\r\n      setInput('');\r\n      setFeedback('');\r\n      \r\n      setStep(2);\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (input.trim().toLowerCase() === problem.answer.toLowerCase()) {\r\n      setFeedback('✅ Correct!');\r\n    } else {\r\n      setFeedback('❌ Not quite. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-container fade-in slide-up\" style={{ textAlign: 'center', maxWidth: 600, margin: '0 auto' }}>\r\n      <h2 className=\"ptable-title\" style={{ letterSpacing: 1.5, fontWeight: 800, fontSize: '2.1em', textShadow: '0 2px 18px #b6f8e0aa, 0 1px 0 #fff', marginBottom: 18 }}>Ionic Naming Conventions Tutorial</h2>\r\n      <div className=\"glass-card\" style={{ padding: '30px 30px 18px 30px', fontSize: '1.18em', background: 'rgba(40,40,80,0.90)', color: '#e0e7ff', borderRadius: 18, boxShadow: '0 4px 32px #b6f8e055', marginBottom: 24 }}>\r\n        {step === 0 && (\r\n          <>\r\n            <div style={{textAlign:'left', marginBottom:18}}>\r\n              <b>What is an Ionic Compound?</b><br/>\r\n              Ionic compounds are made of positive ions (cations) and negative ions (anions) held together by electrostatic attraction. Examples: table salt (NaCl), calcium chloride (CaCl<sub>2</sub>).\r\n            </div>\r\n            <button className=\"ptable-btn\" style={{marginTop:18}} onClick={handleNext}>Next</button>\r\n          </>\r\n        )}\r\n        {step === 1 && (\r\n          <>\r\n            <div style={{textAlign:'left', marginBottom:18}}>\r\n              <b>How to Name Ionic Compounds:</b>\r\n              <ol style={{ textAlign: 'left', paddingLeft: 28, marginBottom: 0 }}>\r\n                <li>Write the <b>cation</b> (positive ion) name first.</li>\r\n                <li>Write the <b>anion</b> (negative ion) name second.</li>\r\n                <li>For simple ions, change the ending of the anion to <b>-ide</b>.</li>\r\n                <li>For polyatomic ions, use the ion name as is.</li>\r\n                <li>Do <b>not</b> use prefixes (mono-, di-, etc.).</li>\r\n                <li>For transition metals, use Roman numerals to show the charge.</li>\r\n              </ol>\r\n            </div>\r\n            <button className=\"ptable-btn\" style={{marginTop:18}} onClick={handleNext}>Next</button>\r\n          </>\r\n        )}\r\n        {step === 2 && (\r\n          <>\r\n            <div style={{textAlign:'left', marginBottom:18}}>\r\n              <b>Example:</b> <span style={{color:'#b6f8e0'}}>{problem.formula}</span><br/>\r\n              <span style={{fontSize:'1.05em'}}>What is the name of this compound?</span>\r\n            </div>\r\n            <form onSubmit={handleSubmit} style={{marginBottom:10}}>\r\n              <input\r\n                className=\"glow-input\"\r\n                value={input}\r\n                onChange={e=>setInput(e.target.value)}\r\n                placeholder=\"Type the name here\"\r\n                style={{\r\n                  width: '94vw',\r\n                  maxWidth: 420,\r\n                  fontSize: '1.15em',\r\n                  background: '#fff',\r\n                  color: '#23234a',\r\n                  border: '2px solid #b6f8e0',\r\n                  borderRadius: 10,\r\n                  padding: '12px 14px',\r\n                  margin: '0 auto 4px auto',\r\n                  fontWeight: 600,\r\n                  boxSizing: 'border-box',\r\n                  outline: 'none',\r\n                  boxShadow: '0 1px 8px #b6f8e022',\r\n                  display: 'block',\r\n                }}\r\n              />\r\n              <div className=\"button-row\">\r\n                <button className=\"ptable-btn\" type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n            <div className=\"button-row\">\r\n              <button className=\"ptable-btn\" onClick={() => onPeriodicTable && onPeriodicTable({step, input, feedback, problem})}>Show Periodic Table</button>\r\n              <button className=\"ptable-btn\" onClick={handleNext}>Try Another</button>\r\n              <button className=\"ptable-btn\" style={{background:'#4e46a1'}} onClick={() => setStep(0)}>Review Tutorial</button>\r\n            </div>\r\n            {feedback && <div style={{margin:'10px 0', fontWeight:600, color: feedback.startsWith('✅') ? '#5eead4' : '#ff5ca7'}}>{feedback}</div>}\r\n            {feedback.startsWith('✅') && (\r\n              <div style={{marginTop:10, background:'rgba(182,248,224,0.13)', borderRadius:10, padding:'12px 16px', color:'#b6f8e0'}}>{problem.explanation}</div>\r\n            )}\r\n          </>\r\n        )}\r\n        {/* Fallback for out-of-range step values */}\r\n        {step !== 0 && step !== 1 && step !== 2 && (\r\n          <div style={{padding:'24px', textAlign:'center', color:'#ff5ca7'}}>\r\n            <b>Oops! Something went wrong.</b>\r\n            <div style={{marginTop:12}}>Please go back and restart the tutorial.</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button className=\"back-btn\" onClick={onBack} style={{ marginTop: 18, fontWeight: 600, fontSize: '1.08em', borderRadius: 10, boxShadow: '0 2px 10px #23234a55' }}>Back</button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getRandomIonicProblem","problems","formula","answer","explanation","Math","floor","random","length","IonicNamingInstructions","_ref","_savedState$input","_savedState$feedback","_savedState$problem","onBack","onPeriodicTable","savedState","setSavedState","initialStep","includes","step","setStep","useState","input","setInput","feedback","setFeedback","problem","setProblem","handleNext","_jsxs","className","style","textAlign","maxWidth","margin","children","_jsx","letterSpacing","fontWeight","fontSize","textShadow","marginBottom","padding","background","color","borderRadius","boxShadow","_Fragment","marginTop","onClick","paddingLeft","onSubmit","e","preventDefault","trim","toLowerCase","value","onChange","target","placeholder","width","border","boxSizing","outline","display","type","startsWith"],"sourceRoot":""}