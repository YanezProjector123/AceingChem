{"version":3,"file":"static/js/266.2a62f007.chunk.js","mappings":"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","sources":["IdealGasLawActivity.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './IdealGasLawActivity.css';\n\nexport default function IdealGasLawActivity({ onBack, onShowPeriodicTable }) {\n  const R = 0.0821; // L·atm/(mol·K)\n  const [problem, setProblem] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [step, setStep] = useState(1); // 1: formula, 2: substitution, 3: solve\n  const [userFormula, setUserFormula] = useState('');\n  const [userSubstitution, setUserSubstitution] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [showHint, setShowHint] = useState(false);\n  const [showSolution, setShowSolution] = useState(false);\n  const [answerState, setAnswerState] = useState(null); // null, 'correct', 'incorrect'\n\n  // Infinite question diversity: randomize units, values, and question types\n  function generateProblem() {\n    // Randomize which variable to solve for\n    const vars = ['P', 'V', 'n', 'T'];\n    const solveFor = vars[Math.floor(Math.random() * vars.length)];\n    // Randomize units and ranges for extra diversity\n    let P = +(Math.random() * 4 + 0.5).toFixed(2); // atm\n    let V = +(Math.random() * 20 + 1).toFixed(2); // L\n    let n = +(Math.random() * 8 + 0.1).toFixed(2); // mol\n    let T = +(Math.random() * 600 + 150).toFixed(0); // K\n    // Mix up the context: sometimes integer, sometimes decimal\n    if (Math.random() < 0.3) {\n      P = Math.round(P);\n      V = Math.round(V);\n      n = Math.round(n * 10) / 10;\n      T = Math.round(T);\n    }\n    // Calculate answer\n    let answer = 0;\n    switch (solveFor) {\n      case 'P':\n        answer = (n * R * T / V).toFixed(3);\n        break;\n      case 'V':\n        answer = (n * R * T / P).toFixed(3);\n        break;\n      case 'n':\n        answer = (P * V / (R * T)).toFixed(3);\n        break;\n      case 'T':\n        answer = (P * V / (n * R)).toFixed(2);\n        break;\n      default:\n        answer = '';\n    }\n    return {\n      solveFor,\n      P,\n      V,\n      n,\n      T,\n      answer,\n    };\n  }\n\n  React.useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setProblem(generateProblem());\n      setLoading(false);\n    }, 600);\n  }, []);\n\n  function generateProblem() {\n    // Randomize which variable to solve for\n    const vars = ['P', 'V', 'n', 'T'];\n    const solveFor = vars[Math.floor(Math.random() * vars.length)];\n    // Generate random values for the other variables\n    let P = +(Math.random() * 2 + 0.8).toFixed(2); // atm\n    let V = +(Math.random() * 10 + 1).toFixed(2); // L\n    let n = +(Math.random() * 2 + 0.5).toFixed(2); // mol\n    let T = +(Math.random() * 200 + 273).toFixed(0); // K\n    // Calculate answer\n    let answer = 0;\n    switch (solveFor) {\n      case 'P':\n        answer = (n * R * T / V).toFixed(3);\n        break;\n      case 'V':\n        answer = (n * R * T / P).toFixed(3);\n        break;\n      case 'n':\n        answer = (P * V / (R * T)).toFixed(3);\n        break;\n      case 'T':\n        answer = (P * V / (n * R)).toFixed(2);\n        break;\n      default:\n        answer = '';\n    }\n    return {\n      solveFor,\n      P,\n      V,\n      n,\n      T,\n      answer,\n    };\n  }\n\n  const variableLabels = {\n    P: 'Pressure (P, in atm)',\n    V: 'Volume (V, in L)',\n    n: 'Moles (n, in mol)',\n    T: 'Temperature (T, in K)',\n  };\n\n  const unitLabels = {\n    P: 'atm',\n    V: 'L',\n    n: 'mol',\n    T: 'K',\n  };\n\n  function handleCheckFormula(e) {\n    e.preventDefault();\n    if (answerState) return;\n    const correct = getFormula(problem.solveFor);\n    if (userFormula.replace(/\\s+/g, '').toLowerCase() === correct.replace(/\\s+/g, '').toLowerCase()) {\n      setStep(2);\n      setFeedback('✅ Correct! Next, substitute the values into your formula.');\n      setAnswerState('correct');\n    } else {\n      setFeedback('❌ Incorrect. Make sure you rearrange PV = nRT for the unknown variable. Try again or use the hint!');\n      setAnswerState('incorrect');\n    }\n  }\n\n  function handleCheckSubstitution(e) {\n    e.preventDefault();\n    if (answerState) return;\n    const correct = getSubstitution(problem);\n    if (userSubstitution.replace(/\\s+/g, '').toLowerCase() === correct.replace(/\\s+/g, '').toLowerCase()) {\n      setStep(3);\n      setFeedback('✅ Correct substitution! Now solve for the answer.');\n      setAnswerState('correct');\n    } else {\n      setFeedback('❌ Incorrect substitution. Double-check your numbers and order.');\n      setAnswerState('incorrect');\n    }\n  }\n\n  function handleCheckAnswer(e) {\n    e.preventDefault();\n    if (answerState) return;\n    if (Math.abs(Number(userAnswer) - Number(problem.answer)) < 0.02) {\n      setFeedback('✅ Correct! You solved for the unknown.');\n      setAnswerState('correct');\n    } else {\n      setFeedback('❌ Incorrect answer. Review your math, check your units, and see the worked solution below.');\n      setShowSolution(true);\n      setAnswerState('incorrect');\n    }\n  }\n\n  function handleNext() {\n    setLoading(true);\n    setTimeout(() => {\n      setProblem(generateProblem());\n      setStep(1);\n      setUserFormula('');\n      setUserSubstitution('');\n      setUserAnswer('');\n      setFeedback('');\n      setShowHint(false);\n      setShowSolution(false);\n      setAnswerState(null);\n      setLoading(false);\n    }, 600);\n  }\n\n  function getFormula(variable) {\n    switch(variable) {\n      case 'P': return 'P = nRT / V';\n      case 'V': return 'V = nRT / P';\n      case 'n': return 'n = PV / RT';\n      case 'T': return 'T = PV / nR';\n      default: return '';\n    }\n  }\n\n  function getSubstitution(prob) {\n    switch(prob.solveFor) {\n      case 'P': return `P = (${prob.n} * ${R} * ${prob.T}) / ${prob.V}`;\n      case 'V': return `V = (${prob.n} * ${R} * ${prob.T}) / ${prob.P}`;\n      case 'n': return `n = (${prob.P} * ${prob.V}) / (${R} * ${prob.T})`;\n      case 'T': return `T = (${prob.P} * ${prob.V}) / (${prob.n} * ${R})`;\n      default: return '';\n    }\n  }\n\n  function getWorkedSolution(prob) {\n    let num, denom, expr, final;\n    switch(prob.solveFor) {\n      case 'P':\n        num = `${prob.n} * ${R} * ${prob.T}`;\n        denom = `${prob.V}`;\n        expr = `(${num}) / (${denom})`;\n        final = `${(prob.n * R * prob.T).toFixed(3)} / ${prob.V} = ${prob.answer} atm`;\n        return [\n          `P = nRT / V`,\n          `P = (${prob.n} * ${R} * ${prob.T}) / ${prob.V}`,\n          `P = ${final}`\n        ];\n      case 'V':\n        num = `${prob.n} * ${R} * ${prob.T}`;\n        denom = `${prob.P}`;\n        expr = `(${num}) / (${denom})`;\n        final = `${(prob.n * R * prob.T).toFixed(3)} / ${prob.P} = ${prob.answer} L`;\n        return [\n          `V = nRT / P`,\n          `V = (${prob.n} * ${R} * ${prob.T}) / ${prob.P}`,\n          `V = ${final}`\n        ];\n      case 'n':\n        num = `${prob.P} * ${prob.V}`;\n        denom = `${R} * ${prob.T}`;\n        expr = `(${num}) / (${denom})`;\n        final = `${(prob.P * prob.V).toFixed(3)} / ${(R * prob.T).toFixed(3)} = ${prob.answer} mol`;\n        return [\n          `n = PV / RT`,\n          `n = (${prob.P} * ${prob.V}) / (${R} * ${prob.T})`,\n          `n = ${final}`\n        ];\n      case 'T':\n        num = `${prob.P} * ${prob.V}`;\n        denom = `${prob.n} * ${R}`;\n        expr = `(${num}) / (${denom})`;\n        final = `${(prob.P * prob.V).toFixed(3)} / ${(prob.n * R).toFixed(3)} = ${prob.answer} K`;\n        return [\n          `T = PV / nR`,\n          `T = (${prob.P} * ${prob.V}) / (${prob.n} * ${R})`,\n          `T = ${final}`\n        ];\n      default:\n        return [];\n    }\n  }\n\n  if (loading || !problem) {\n    return (\n      <div className=\"igl-root\" style={{display:'flex',alignItems:'center',justifyContent:'center',minHeight:'300px'}}>\n        <div style={{color:'#7dd3fc',fontSize:'1.25rem',textAlign:'center',width:'100%'}}>Loading Activity...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"igl-root\">\n      <div className=\"igl-title\">Ideal Gas Law: Step-by-Step Practice</div>\n      <div className=\"igl-problem-card\">\n        <b>Problem:</b> Solve for <span style={{color:'#2563eb',fontWeight:700}}>{variableLabels[problem.solveFor]}</span>.<br/>\n        <ul style={{marginTop:8,marginBottom:0,paddingLeft:18}}>\n          {problem.solveFor !== 'P' && <li>Pressure (P): <b>{problem.P} atm</b></li>}\n          {problem.solveFor !== 'V' && <li>Volume (V): <b>{problem.V} L</b></li>}\n          {problem.solveFor !== 'n' && <li>Moles (n): <b>{problem.n} mol</b></li>}\n          {problem.solveFor !== 'T' && <li>Temperature (T): <b>{problem.T} K</b></li>}\n        </ul>\n      </div>\n      <div className=\"igl-step\">\n        <div className=\"igl-step-title\">Step 1: Rearrange the Ideal Gas Law (PV = nRT) to solve for <span style={{color:'#38bdf8',fontWeight:700}}>{problem.solveFor}</span>.</div>\n        <form className=\"igl-form\" onSubmit={handleCheckFormula}>\n          <input className=\"igl-input\" type=\"text\" value={userFormula} onChange={e=>setUserFormula(e.target.value)} placeholder={`Enter formula for ${problem.solveFor}`} autoComplete=\"off\" disabled={answerState !== null || step !== 1} />\n          <button className=\"igl-btn\" type=\"submit\" disabled={answerState !== null || step !== 1}>Check</button>\n          <button className=\"igl-btn-secondary\" type=\"button\" onClick={()=>setShowHint(h=>!h)} disabled={answerState !== null || step !== 1}>{showHint?'Hide Hint':'Show Hint'}</button>\n        </form>\n        {showHint && (\n          <div className=\"igl-hint\"><b>Hint:</b> {getFormula(problem.solveFor)}</div>\n        )}\n        {answerState && (\n          <button className=\"igl-btn\" style={{marginTop:'0.7rem'}} onClick={handleNext}>Next</button>\n        )}\n      </div>\n      {step>=2 && (\n        <div className=\"igl-step\">\n          <div className=\"igl-step-title\">Step 2: Substitute the given values into your formula.</div>\n          <form className=\"igl-form\" onSubmit={handleCheckSubstitution}>\n            <input className=\"igl-input\" type=\"text\" value={userSubstitution} onChange={e=>setUserSubstitution(e.target.value)} placeholder=\"Show substitution (e.g. P = (0.50 * 0.0821 * 300) / 5.00)\" autoComplete=\"off\" disabled={answerState !== null || step !== 2} />\n            <button className=\"igl-btn\" type=\"submit\" disabled={answerState !== null || step !== 2}>Check</button>\n          </form>\n          <div style={{marginTop:6,fontSize:'0.97em',color:'#666'}}>\n            Use the values from the problem. Don't round intermediate steps too early!\n          </div>\n          {answerState && (\n            <button className=\"igl-btn\" style={{marginTop:'0.7rem'}} onClick={handleNext}>Next</button>\n          )}\n        </div>\n      )}\n      {step>=3 && (\n        <div className=\"igl-step\">\n          <div className=\"igl-step-title\">Step 3: Calculate the answer. Round to 2 or 3 decimal places and include the correct unit.</div>\n          <form className=\"igl-form\" onSubmit={handleCheckAnswer}>\n            <input className=\"igl-input\" type=\"number\" step=\"any\" value={userAnswer} onChange={e=>setUserAnswer(e.target.value)} placeholder={`Answer (${unitLabels[problem.solveFor]})`} autoComplete=\"off\" disabled={answerState !== null || step !== 3} />\n            <button className=\"igl-btn\" type=\"submit\" disabled={answerState !== null || step !== 3}>Check</button>\n          </form>\n          {answerState && (\n            <button className=\"igl-btn\" style={{marginTop:'0.7rem'}} onClick={handleNext}>Next</button>\n          )}\n        </div>\n      )}\n      {feedback && (\n        <div className={feedback.includes('Correct') ? 'igl-feedback' : 'igl-feedback error'}>{feedback}</div>\n      )}\n      {showSolution && (\n        <div className=\"igl-solution\">\n          <b>Worked Solution:</b>\n          <ul style={{marginTop:6,paddingLeft:18}}>\n            {getWorkedSolution(problem).map((step,i)=>(<li key={i}>{step}</li>))}\n          </ul>\n        </div>\n      )}\n      <div style={{display:'flex', justifyContent:'center', gap:'16px', marginTop:'1.3rem', flexWrap:'wrap'}}>\n        <button className=\"igl-back-btn\" onClick={onBack}>Back</button>\n        <button className=\"igl-back-btn\" style={{background:'#38bdf8', color:'#23234a', borderColor:'#38bdf8'}} onClick={onShowPeriodicTable}>Periodic Table</button>\n      </div>\n    </div>\n  );\n}\n\n"],"names":["IdealGasLawActivity","_ref","onBack","onShowPeriodicTable","R","problem","setProblem","useState","loading","setLoading","step","setStep","userFormula","setUserFormula","userSubstitution","setUserSubstitution","userAnswer","setUserAnswer","feedback","setFeedback","showHint","setShowHint","showSolution","setShowSolution","answerState","setAnswerState","generateProblem","vars","solveFor","Math","floor","random","length","P","toFixed","V","n","T","round","answer","React","setTimeout","handleNext","getFormula","variable","_jsx","className","style","display","alignItems","justifyContent","minHeight","children","color","fontSize","textAlign","width","_jsxs","fontWeight","marginTop","marginBottom","paddingLeft","onSubmit","e","preventDefault","correct","replace","toLowerCase","type","value","onChange","target","placeholder","autoComplete","disabled","onClick","h","prob","getSubstitution","abs","Number","includes","num","denom","expr","final","getWorkedSolution","map","i","gap","flexWrap","background","borderColor"],"sourceRoot":""}