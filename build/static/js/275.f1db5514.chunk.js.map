{"version":3,"file":"static/js/275.f1db5514.chunk.js","mappings":"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","sources":["CovalentNameToFormulaActivity.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport PeriodicTable from './PeriodicTable';\r\n\r\n// Covalent compounds: only nonmetals, use prefixes (mono-, di-, tri-, etc.)\r\nconst covalentProblems = [\r\n  // Carbon compounds\r\n  { name: 'Carbon dioxide', answer: 'CO₂', explanation: 'Carbon is C, dioxide means 2 oxygens.' },\r\n  { name: 'Carbon monoxide', answer: 'CO', explanation: 'Carbon is C, monoxide means 1 oxygen.' },\r\n  { name: 'Carbon disulfide', answer: 'CS₂', explanation: 'Disulfide means 2 sulfurs.' },\r\n  { name: 'Carbon tetrachloride', answer: 'CCl₄', explanation: 'Tetrachloride means 4 chlorines.' },\r\n  { name: 'Carbon tetrafluoride', answer: 'CF₄', explanation: 'Tetrafluoride means 4 fluorines.' },\r\n  { name: 'Carbon tetrabromide', answer: 'CBr₄', explanation: 'Tetrabromide means 4 bromines.' },\r\n  { name: 'Carbon tetraiodide', answer: 'CI₄', explanation: 'Tetraiodide means 4 iodines.' },\r\n\r\n  // Nitrogen compounds\r\n  { name: 'Dinitrogen tetroxide', answer: 'N₂O₄', explanation: 'Dinitrogen means 2 nitrogens, tetroxide means 4 oxygens.' },\r\n  { name: 'Nitrogen dioxide', answer: 'NO₂', explanation: 'Dioxide means 2 oxygens.' },\r\n  { name: 'Dinitrogen trioxide', answer: 'N₂O₃', explanation: 'Trioxide means 3 oxygens.' },\r\n  { name: 'Dinitrogen pentoxide', answer: 'N₂O₅', explanation: 'Pentoxide means 5 oxygens.' },\r\n  { name: 'Dinitrogen monoxide', answer: 'N₂O', explanation: 'Monoxide means 1 oxygen.' },\r\n  { name: 'Nitrogen monoxide', answer: 'NO', explanation: 'Monoxide means 1 oxygen.' },\r\n  { name: 'Dinitrogen difluoride', answer: 'N₂F₂', explanation: 'Difluoride means 2 fluorines.' },\r\n  { name: 'Nitrogen trifluoride', answer: 'NF₃', explanation: 'Trifluoride means 3 fluorines.' },\r\n  { name: 'Nitrogen trichloride', answer: 'NCl₃', explanation: 'Trichloride means 3 chlorines.' },\r\n\r\n  // Phosphorus compounds\r\n  { name: 'Phosphorus pentachloride', answer: 'PCl₅', explanation: 'Pentachloride means 5 chlorines.' },\r\n  { name: 'Phosphorus trichloride', answer: 'PCl₃', explanation: 'Trichloride means 3 chlorines.' },\r\n  { name: 'Phosphorus triiodide', answer: 'PI₃', explanation: 'Triiodide means 3 iodines.' },\r\n  { name: 'Phosphorus pentafluoride', answer: 'PF₅', explanation: 'Pentafluoride means 5 fluorines.' },\r\n  { name: 'Tetraphosphorus decoxide', answer: 'P₄O₁₀', explanation: 'Tetraphosphorus means 4 phosphorus atoms, decoxide means 10 oxygens.' },\r\n  { name: 'Tetraphosphorus trisulfide', answer: 'P₄S₃', explanation: 'Trisulfide means 3 sulfurs.' },\r\n  { name: 'Phosphorus trioxide', answer: 'P₄O₆', explanation: 'Trioxide means 6 oxygens.' },\r\n\r\n  // Sulfur compounds\r\n  { name: 'Sulfur dioxide', answer: 'SO₂', explanation: 'Dioxide means 2 oxygens.' },\r\n  { name: 'Sulfur trioxide', answer: 'SO₃', explanation: 'Trioxide means 3 oxygens.' },\r\n  { name: 'Sulfur hexafluoride', answer: 'SF₆', explanation: 'Hexafluoride means 6 fluorines.' },\r\n  { name: 'Sulfur dichloride', answer: 'SCl₂', explanation: 'Dichloride means 2 chlorines.' },\r\n  { name: 'Sulfur tetrafluoride', answer: 'SF₄', explanation: 'Tetrafluoride means 4 fluorines.' },\r\n  { name: 'Disulfur decafluoride', answer: 'S₂F₁₀', explanation: 'Disulfur means 2 sulfurs, decafluoride means 10 fluorines.' },\r\n  { name: 'Dihydrogen disulfide', answer: 'H₂S₂', explanation: 'Dihydrogen means 2 hydrogens, disulfide means 2 sulfurs.' },\r\n\r\n  // Halogen and oxygen compounds\r\n  { name: 'Dichlorine monoxide', answer: 'Cl₂O', explanation: 'Dichlorine means 2 chlorines, monoxide means 1 oxygen.' },\r\n  { name: 'Chlorine trifluoride', answer: 'ClF₃', explanation: 'Trifluoride means 3 fluorines.' },\r\n  { name: 'Iodine pentafluoride', answer: 'IF₅', explanation: 'Pentafluoride means 5 fluorines.' },\r\n  { name: 'Diiodine pentoxide', answer: 'I₂O₅', explanation: 'Diiodine means 2 iodines, pentoxide means 5 oxygens.' },\r\n  { name: 'Dibromine monoxide', answer: 'Br₂O', explanation: 'Dibromine means 2 bromines, monoxide means 1 oxygen.' },\r\n  { name: 'Bromine trifluoride', answer: 'BrF₃', explanation: 'Trifluoride means 3 fluorines.' },\r\n  { name: 'Bromine pentafluoride', answer: 'BrF₅', explanation: 'Pentafluoride means 5 fluorines.' },\r\n  { name: 'Iodine trifluoride', answer: 'IF₃', explanation: 'Trifluoride means 3 fluorines.' },\r\n  { name: 'Iodine heptafluoride', answer: 'IF₇', explanation: 'Heptafluoride means 7 fluorines.' },\r\n  { name: 'Dichlorine decafluoride', answer: 'Cl₂F₁₀', explanation: 'Dichlorine means 2 chlorines, decafluoride means 10 fluorines.' },\r\n\r\n  // Silicon and selenium compounds\r\n  { name: 'Silicon tetrachloride', answer: 'SiCl₄', explanation: 'Tetrachloride means 4 chlorines.' },\r\n  { name: 'Silicon tetrafluoride', answer: 'SiF₄', explanation: 'Tetrafluoride means 4 fluorines.' },\r\n  { name: 'Selenium hexafluoride', answer: 'SeF₆', explanation: 'Hexafluoride means 6 fluorines.' },\r\n  { name: 'Selenium dioxide', answer: 'SeO₂', explanation: 'Dioxide means 2 oxygens.' },\r\n  { name: 'Selenium tetrachloride', answer: 'SeCl₄', explanation: 'Tetrachloride means 4 chlorines.' },\r\n\r\n  // Water and ammonia\r\n  { name: 'Dihydrogen monoxide', answer: 'H₂O', explanation: 'Dihydrogen means 2 hydrogens, monoxide means 1 oxygen.' },\r\n  { name: 'Ammonia', answer: 'NH₃', explanation: 'Ammonia is NH₃.' },\r\n  { name: 'Hydrazine', answer: 'N₂H₄', explanation: 'Hydrazine is N₂H₄.' },\r\n\r\n  // More exotic\r\n  { name: 'Dinitrogen difluoride', answer: 'N₂F₂', explanation: 'Dinitrogen means 2 nitrogens, difluoride means 2 fluorines.' },\r\n  { name: 'Tetraiodine nonoxide', answer: 'I₄O₉', explanation: 'Tetraiodine means 4 iodines, nonoxide means 9 oxygens.' },\r\n  { name: 'Dibromine pentoxide', answer: 'Br₂O₅', explanation: 'Dibromine means 2 bromines, pentoxide means 5 oxygens.' },\r\n  { name: 'Phosphorus pentabromide', answer: 'PBr₅', explanation: 'Pentabromide means 5 bromines.' },\r\n  { name: 'Phosphorus tribromide', answer: 'PBr₃', explanation: 'Tribromide means 3 bromines.' },\r\n  { name: 'Phosphorus triiodide', answer: 'PI₃', explanation: 'Triiodide means 3 iodines.' },\r\n  { name: 'Dinitrogen tetrafluoride', answer: 'N₂F₄', explanation: 'Tetrafluoride means 4 fluorines.' },\r\n  { name: 'Disulfur dichloride', answer: 'S₂Cl₂', explanation: 'Disulfur means 2 sulfurs, dichloride means 2 chlorines.' }\r\n];\r\n\r\nfunction getRandomCovalentNameToFormulaProblem() {\r\n  return covalentProblems[Math.floor(Math.random() * covalentProblems.length)];\r\n}\r\n\r\nexport default function CovalentNameToFormulaActivity({ onBack, onCovalentFormulaToNameActivity, onPeriodicTable }) {\r\n  const [problem, setProblem] = useState(getRandomCovalentNameToFormulaProblem());\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [showTable, setShowTable] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  function insertSubscript(sub) {\r\n    const el = inputRef.current;\r\n    if (!el) return;\r\n    const start = el.selectionStart;\r\n    const end = el.selectionEnd;\r\n    const newValue = userAnswer.slice(0, start) + sub + userAnswer.slice(end);\r\n    setUserAnswer(newValue);\r\n    setTimeout(() => {\r\n      el.focus();\r\n      el.setSelectionRange(start + 1, start + 1);\r\n    }, 0);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const correct = userAnswer.replace(/\\s+/g, '').toLowerCase() === problem.answer.replace(/\\s+/g, '').toLowerCase();\r\n    if (correct) {\r\n      setFeedback('✅ Correct!');\r\n    } else {\r\n      setFeedback(`❌ Incorrect. The correct answer is ${problem.answer}.\\nExplanation: ${problem.explanation}\\n\\uD83D\\uDCA1 Tip: Use the prefixes (mono-, di-, tri-, etc.) to determine the number of atoms for each element. Write the element symbols in the order given, and use subscripts for the numbers.`);\r\n    }\r\n  }\r\n\r\n  function handleNext() {\r\n    setProblem(getRandomCovalentNameToFormulaProblem());\r\n    setUserAnswer('');\r\n    setFeedback('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"center-container fade-in slide-up\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n      <span className=\"floating-chem-icon\" style={{ left: '8vw', top: '12vh', fontSize: '2.2em', animationDelay: '1.2s' }}>🧪</span>\r\n      <div className=\"glass-card pop-in\">\r\n        <h2 className=\"ptable-title\">Covalent Compound: Name → Formula</h2>\r\n        <div style={{ margin: '20px 0', fontWeight: 600, fontSize: '1.13em' }}>Name: <span style={{ color: 'var(--accent)', fontWeight: 700 }}>{problem.name}</span></div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"glow-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter formula (e.g. CO₂)\"\r\n            value={userAnswer}\r\n            onChange={e => setUserAnswer(e.target.value)}\r\n            style={{ width: '100%', maxWidth: 420 }}\r\n            ref={inputRef}\r\n          />\r\n          <div className=\"subscript-btn-row\">\r\n            {['₀','₁','₂','₃','₄','₅','₆','₇','₈','₉'].map((sub) => (\r\n              <button\r\n                key={sub}\r\n                type=\"button\"\r\n                className=\"subscript-btn\"\r\n                onClick={() => insertSubscript(sub)}\r\n                tabIndex={-1}\r\n              >\r\n                {sub}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button className=\"ptable-btn\" type=\"submit\" style={{ width: '100%', marginBottom: 6 }}>Submit</button>\r\n        </form>\r\n        {feedback && (\r\n          <div className={feedback.startsWith('✅') ? 'feedback-correct' : 'feedback-incorrect'} style={{ whiteSpace: 'pre-line', fontSize: '1.08em', borderRadius: 16, margin: '16px 0', padding: '18px 16px', textAlign: 'left', maxWidth: 420, width: '100%', boxSizing: 'border-box', background: feedback.startsWith('✅') ? undefined : 'linear-gradient(90deg,#ff5ca7 0,#a259ec 100%)', color: feedback.startsWith('✅') ? undefined : '#fff', boxShadow: feedback.startsWith('✅') ? undefined : '0 2px 16px #a259ec55' }}>\r\n            {feedback}\r\n          </div>\r\n        )}\r\n        <button className=\"ptable-btn\" onClick={handleNext}>Try Another</button>\r\n        <button className=\"back-btn\" onClick={onBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["covalentProblems","name","answer","explanation","getRandomCovalentNameToFormulaProblem","Math","floor","random","length","CovalentNameToFormulaActivity","_ref","onBack","onCovalentFormulaToNameActivity","onPeriodicTable","problem","setProblem","useState","userAnswer","setUserAnswer","feedback","setFeedback","showTable","setShowTable","inputRef","useRef","_jsxs","className","style","position","overflow","children","_jsx","left","top","fontSize","animationDelay","margin","fontWeight","color","onSubmit","e","preventDefault","correct","replace","toLowerCase","type","placeholder","value","onChange","target","width","maxWidth","ref","map","sub","onClick","el","current","start","selectionStart","end","selectionEnd","newValue","slice","setTimeout","focus","setSelectionRange","insertSubscript","tabIndex","marginBottom","startsWith","whiteSpace","borderRadius","padding","textAlign","boxSizing","background","undefined","boxShadow"],"sourceRoot":""}