{"version":3,"file":"static/js/442.e2584cfc.chunk.js","mappings":"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","sources":["MassToMassActivity.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './StoichiometryActivity.css';\r\n\r\n// Helper to shuffle array\r\nconst shuffleArray = (array) => {\r\n  let currentIndex = array.length, randomIndex;\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n};\r\n\r\n// Molar masses (g/mol) - Ensure all substances in problems are here\r\nconst MOLAR_MASSES = {\r\n  H2: 2.016,      // Corrected H2\r\n  O2: 31.998,     // Corrected O2\r\n  H2O: 18.015,\r\n  N2: 28.014,     // Corrected N2\r\n  NH3: 17.031,    // Corrected NH3\r\n  CH4: 16.043,    // Corrected CH4\r\n  CO2: 44.01,\r\n  KClO3: 122.55,\r\n  KCl: 74.551,    // Corrected KCl\r\n  Fe2O3: 159.687,\r\n  CO: 28.010,     // Corrected CO\r\n  Fe: 55.845,\r\n  C3H8: 44.097,\r\n  Al: 26.982,\r\n  Cl2: 70.906,    // Corrected Cl2\r\n  AlCl3: 133.341, // Corrected AlCl3\r\n  Zn: 65.38,\r\n  HCl: 36.461,    // Corrected HCl\r\n  ZnCl2: 136.286, // Corrected ZnCl2\r\n  AgNO3: 169.873,\r\n  NaCl: 58.443,   // Corrected NaCl\r\n  AgCl: 143.321,  // Corrected AgCl\r\n  NaNO3: 84.994,  // Corrected NaNO3\r\n  C6H12O6: 180.156,\r\n  SO2: 64.066,\r\n  SO3: 80.064,    // Added SO3\r\n  P4: 123.896,    // Added P4\r\n  P4O10: 283.888, // Added P4O10\r\n  WO3: 231.84,    // Added WO3\r\n  W: 183.84,      // Added W\r\n  C2H5OH: 46.069,\r\n  SiCl4: 169.898, // Added SiCl4\r\n  Mg: 24.305,     // Corrected Mg\r\n  Si: 28.085,     // Added Si\r\n  MgCl2: 95.211,  // Corrected MgCl2\r\n  Na: 22.990,     // Corrected Na\r\n  I2: 253.808,    // Added I2\r\n  MgI2: 278.113,  // Added MgI2\r\n  C2H2: 26.038,   // Added C2H2\r\n  CS2: 76.139,    // Added CS2\r\n  Sn: 118.71,     // Added Sn\r\n  SnCl4: 260.518, // Added SnCl4\r\n  CaCl2: 110.984, // Added CaCl2\r\n  Na3PO4: 163.941,// Added Na3PO4\r\n  Ca3PO4_2: 310.177, // Added Ca3(PO4)2 (using Ca3PO4_2 as key)\r\n  AlOH3: 78.003,    // Added Al(OH)3 as AlOH3\r\n  H2SO4: 98.079,    // Corrected H2SO4\r\n  Al2SO4_3: 342.153,// Added Al2(SO4)3 as Al2SO4_3\r\n  C2H4: 28.054,     // Added C2H4\r\n  NaBr: 102.894,   // Added NaBr\r\n  Br2: 159.808,   // Added Br2\r\n  HgO: 216.589,   // Added HgO\r\n  Hg: 200.59,     // Added Hg\r\n  BaCl2: 208.233,\r\n  Na2SO4: 142.042, // Corrected Na2SO4\r\n  BaSO4: 233.38,  // Added BaSO4\r\n  NH4NO3: 80.043, // Added NH4NO3\r\n  N2O: 44.013,    // Added N2O\r\n  C6H6: 78.114,    // Added C6H6\r\n  C6H5Cl: 112.559, // Added C6H5Cl\r\n  KBr: 119.002,   // Added KBr\r\n  KI: 166.003,\r\n  SiO2: 60.083,\r\n  C: 12.011,      // Added C\r\n  PbNO3_2: 331.208, // Added Pb(NO3)2 as PbNO3_2\r\n  PbI2: 461.008,    // Added PbI2\r\n  KNO3: 101.102,\r\n  MgOH2: 58.319,\r\n  C5H12: 72.151,    // Added C5H12\r\n  NaOH: 39.997,\r\n  S: 32.06,       // Added S\r\n  FeS: 87.91,     // Added FeS\r\n  HBr: 80.912,\r\n  SF6: 146.05,\r\n  PCl5: 208.239,\r\n  NO2: 46.005,\r\n  KMnO4: 158.034,\r\n  NaHCO3: 84.007,\r\n  Al2O3: 101.961,\r\n  CuSO4: 159.609,  // Corrected CuSO4\r\n  CH3COOH: 60.052,\r\n  // Ensure all substances in MOLE_CONVERSION_PROBLEMS below are also in MOLAR_MASSES\r\n};\r\n\r\n\r\n// Mass-to-Mass problems, adapted from MoleToMoleActivity\r\nconst MASS_TO_MASS_PROBLEMS = [\r\n  {\r\n    equation: \"2 H₂ + O₂ → 2 H₂O\",\r\n    stoichiometry: { H2: 2, O2: 1, H2O: 2 },\r\n    substances: ['H2', 'O2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"N₂ + 3 H₂ → 2 NH₃\",\r\n    stoichiometry: { N2: 1, H2: 3, NH3: 2 },\r\n    substances: ['N2', 'H2', 'NH3']\r\n  },\r\n  {\r\n    equation: \"CH₄ + 2 O₂ → CO₂ + 2 H₂O\",\r\n    stoichiometry: { CH4: 1, O2: 2, CO2: 1, H2O: 2 },\r\n    substances: ['CH4', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"2 KClO₃ → 2 KCl + 3 O₂\",\r\n    stoichiometry: { KClO3: 2, KCl: 2, O2: 3 },\r\n    substances: ['KClO3', 'KCl', 'O2']\r\n  },\r\n  {\r\n    equation: \"Fe₂O₃ + 3 CO → 2 Fe + 3 CO₂\",\r\n    stoichiometry: { Fe2O3: 1, CO: 3, Fe: 2, CO2: 3 },\r\n    substances: ['Fe2O3', 'CO', 'Fe', 'CO2']\r\n  },\r\n  {\r\n    equation: \"C₃H₈ + 5 O₂ → 3 CO₂ + 4 H₂O\",\r\n    stoichiometry: { C3H8: 1, O2: 5, CO2: 3, H2O: 4 },\r\n    substances: ['C3H8', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"2 Al + 3 Cl₂ → 2 AlCl₃\",\r\n    stoichiometry: { Al: 2, Cl2: 3, AlCl3: 2 },\r\n    substances: ['Al', 'Cl2', 'AlCl3']\r\n  },\r\n  {\r\n    equation: \"Zn + 2 HCl → ZnCl₂ + H₂\",\r\n    stoichiometry: { Zn: 1, HCl: 2, ZnCl2: 1, H2: 1 },\r\n    substances: ['Zn', 'HCl', 'ZnCl2', 'H2']\r\n  },\r\n  {\r\n    equation: \"AgNO₃ + NaCl → AgCl + NaNO₃\",\r\n    stoichiometry: { AgNO3: 1, NaCl: 1, AgCl: 1, NaNO3: 1 },\r\n    substances: ['AgNO3', 'NaCl', 'AgCl', 'NaNO3']\r\n  },\r\n  {\r\n    equation: \"C₆H₁₂O₆ + 6 O₂ → 6 CO₂ + 6 H₂O\",\r\n    stoichiometry: { C6H12O6: 1, O2: 6, CO2: 6, H2O: 6 },\r\n    substances: ['C6H12O6', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"2 SO₂ + O₂ → 2 SO₃\",\r\n    stoichiometry: { SO2: 2, O2: 1, SO3: 2 },\r\n    substances: ['SO2', 'O2', 'SO3']\r\n  },\r\n  {\r\n    equation: \"P₄ + 5 O₂ → P₄O₁₀\",\r\n    stoichiometry: { P4: 1, O2: 5, P4O10: 1 },\r\n    substances: ['P4', 'O2', 'P4O10']\r\n  },\r\n  {\r\n    equation: \"WO₃ + 3 H₂ → W + 3 H₂O\",\r\n    stoichiometry: { WO3: 1, H2: 3, W: 1, H2O: 3 },\r\n    substances: ['WO3', 'H2', 'W', 'H2O']\r\n  },\r\n  {\r\n    equation: \"C₂H₅OH + 3 O₂ → 2 CO₂ + 3 H₂O\",\r\n    stoichiometry: { C2H5OH: 1, O2: 3, CO2: 2, H2O: 3 },\r\n    substances: ['C2H5OH', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"SiCl₄ + 2 Mg → Si + 2 MgCl₂\",\r\n    stoichiometry: { SiCl4: 1, Mg: 2, Si: 1, MgCl2: 2 },\r\n    substances: ['SiCl4', 'Mg', 'Si', 'MgCl2']\r\n  },\r\n  {\r\n    equation: \"4 Fe + 3 O₂ → 2 Fe₂O₃\",\r\n    stoichiometry: { Fe: 4, O2: 3, Fe2O3: 2 },\r\n    substances: ['Fe', 'O2', 'Fe2O3']\r\n  },\r\n  {\r\n    equation: \"2 Na + Cl₂ → 2 NaCl\",\r\n    stoichiometry: { Na: 2, Cl2: 1, NaCl: 2 },\r\n    substances: ['Na', 'Cl2', 'NaCl']\r\n  },\r\n  {\r\n    equation: \"Mg + I₂ → MgI₂\",\r\n    stoichiometry: { Mg: 1, I2: 1, MgI2: 1 },\r\n    substances: ['Mg', 'I2', 'MgI2']\r\n  },\r\n  {\r\n    equation: \"2 C₂H₂ + 5 O₂ → 4 CO₂ + 2 H₂O\",\r\n    stoichiometry: { C2H2: 2, O2: 5, CO2: 4, H2O: 2 },\r\n    substances: ['C2H2', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"CS₂ + 3 O₂ → CO₂ + 2 SO₂\",\r\n    stoichiometry: { CS2: 1, O2: 3, CO2: 1, SO2: 2 },\r\n    substances: ['CS2', 'O2', 'CO2', 'SO2']\r\n  },\r\n  {\r\n    equation: \"Sn + 2 Cl₂ → SnCl₄\",\r\n    stoichiometry: { Sn: 1, Cl2: 2, SnCl4: 1 },\r\n    substances: ['Sn', 'Cl2', 'SnCl4']\r\n  },\r\n  {\r\n    equation: \"3 CaCl₂ + 2 Na₃PO₄ → Ca₃(PO₄)₂ + 6 NaCl\",\r\n    stoichiometry: { CaCl2: 3, Na3PO4: 2, Ca3PO4_2: 1, NaCl: 6 },\r\n    substances: ['CaCl2', 'Na3PO4', 'Ca3PO4_2', 'NaCl']\r\n  },\r\n  {\r\n    equation: \"2 Al(OH)₃ + 3 H₂SO₄ → Al₂(SO₄)₃ + 6 H₂O\",\r\n    stoichiometry: { AlOH3: 2, H2SO4: 3, Al2SO4_3: 1, H2O: 6 },\r\n    substances: ['AlOH3', 'H2SO4', 'Al2SO4_3', 'H2O']\r\n  },\r\n  {\r\n    equation: \"C₂H₄ + 3 O₂ → 2 CO₂ + 2 H₂O\",\r\n    stoichiometry: { C2H4: 1, O2: 3, CO2: 2, H2O: 2 },\r\n    substances: ['C2H4', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"2 NaBr + Cl₂ → 2 NaCl + Br₂\",\r\n    stoichiometry: { NaBr: 2, Cl2: 1, NaCl: 2, Br2: 1 },\r\n    substances: ['NaBr', 'Cl2', 'NaCl', 'Br2']\r\n  },\r\n  {\r\n    equation: \"H₂ + Cl₂ → 2 HCl\",\r\n    stoichiometry: { H2: 1, Cl2: 1, HCl: 2 },\r\n    substances: ['H2', 'Cl2', 'HCl']\r\n  },\r\n  {\r\n    equation: \"2 HgO → 2 Hg + O₂\",\r\n    stoichiometry: { HgO: 2, Hg: 2, O2: 1 },\r\n    substances: ['HgO', 'Hg', 'O2']\r\n  },\r\n  {\r\n    equation: \"BaCl₂ + Na₂SO₄ → BaSO₄ + 2 NaCl\",\r\n    stoichiometry: { BaCl2: 1, Na2SO4: 1, BaSO4: 1, NaCl: 2 },\r\n    substances: ['BaCl2', 'Na2SO4', 'BaSO4', 'NaCl']\r\n  },\r\n  {\r\n    equation: \"NH₄NO₃ → N₂O + 2 H₂O\",\r\n    stoichiometry: { NH4NO3: 1, N2O: 1, H2O: 2 },\r\n    substances: ['NH4NO3', 'N2O', 'H2O']\r\n  },\r\n  {\r\n    equation: \"C₆H₆ + Cl₂ → C₆H₅Cl + HCl\",\r\n    stoichiometry: { C6H6: 1, Cl2: 1, C6H5Cl: 1, HCl: 1 },\r\n    substances: ['C6H6', 'Cl2', 'C6H5Cl', 'HCl']\r\n  },\r\n  {\r\n    equation: \"2 KBr + I₂ → 2 KI + Br₂\",\r\n    stoichiometry: { KBr: 2, I2: 1, KI: 2, Br2: 1 },\r\n    substances: ['KBr', 'I2', 'KI', 'Br2']\r\n  },\r\n  {\r\n    equation: \"SiO₂ + 2 C → Si + 2 CO\",\r\n    stoichiometry: { SiO2: 1, C: 2, Si: 1, CO: 2 },\r\n    substances: ['SiO2', 'C', 'Si', 'CO']\r\n  },\r\n  {\r\n    equation: \"Pb(NO₃)₂ + 2 KI → PbI₂ + 2 KNO₃\",\r\n    stoichiometry: { PbNO3_2: 1, KI: 2, PbI2: 1, KNO3: 2 },\r\n    substances: ['PbNO3_2', 'KI', 'PbI2', 'KNO3']\r\n  },\r\n  {\r\n    equation: \"2 HCl + Mg(OH)₂ → MgCl₂ + 2 H₂O\",\r\n    stoichiometry: { HCl: 2, MgOH2: 1, MgCl2: 1, H2O: 2 },\r\n    substances: ['HCl', 'MgOH2', 'MgCl2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"C₅H₁₂ + 8 O₂ → 5 CO₂ + 6 H₂O\",\r\n    stoichiometry: { C5H12: 1, O2: 8, CO2: 5, H2O: 6 },\r\n    substances: ['C5H12', 'O2', 'CO2', 'H2O']\r\n  },\r\n  {\r\n    equation: \"H₂SO₄ + 2 NaOH → Na₂SO₄ + 2 H₂O\",\r\n    stoichiometry: { H2SO4: 1, NaOH: 2, Na2SO4: 1, H2O: 2 },\r\n    substances: ['H2SO4', 'NaOH', 'Na2SO4', 'H2O']\r\n  },\r\n  {\r\n    equation: \"Fe + S → FeS\",\r\n    stoichiometry: { Fe: 1, S: 1, FeS: 1 },\r\n    substances: ['Fe', 'S', 'FeS']\r\n  }\r\n];\r\n\r\nexport default function MassToMassActivity({ onBack, onShowPeriodicTable, savedState, setSavedState }) {\r\n  const [currentProblemSet, setCurrentProblemSet] = useState(() => savedState?.currentProblemSet || shuffleArray([...MASS_TO_MASS_PROBLEMS]));\r\n  const [problemIndex, setProblemIndex] = useState(() => savedState?.problemIndex || 0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(() => savedState?.userAnswer || '');\r\n  const [feedback, setFeedback] = useState(() => savedState?.feedback || null);\r\n  const [showFeedback, setShowFeedback] = useState(() => savedState?.showFeedback || false);\r\n  const [score, setScore] = useState(() => savedState?.score || 0);\r\n  const [questionsAttempted, setQuestionsAttempted] = useState(() => savedState?.questionsAttempted || 0);\r\n  const inputRef = useRef(null);\r\n\r\n  const generateQuestion = useCallback(() => {\r\n    if (problemIndex >= currentProblemSet.length) {\r\n      setFeedback({ type: 'info', message: `Set complete! Your score: ${score}/${questionsAttempted}. Starting new set.` });\r\n      setShowFeedback(true);\r\n      return;\r\n    }\r\n\r\n    const problem = currentProblemSet[problemIndex];\r\n    const substancesInProblem = problem.substances;\r\n    let givenSubstance, findSubstance;\r\n\r\n    // Ensure given and find substances are different\r\n    do {\r\n      givenSubstance = substancesInProblem[Math.floor(Math.random() * substancesInProblem.length)];\r\n      findSubstance = substancesInProblem[Math.floor(Math.random() * substancesInProblem.length)];\r\n    } while (givenSubstance === findSubstance);\r\n\r\n    const givenMolarMass = MOLAR_MASSES[givenSubstance];\r\n    const findMolarMass = MOLAR_MASSES[findSubstance];\r\n    const stoicRatioGiven = problem.stoichiometry[givenSubstance];\r\n    const stoicRatioFind = problem.stoichiometry[findSubstance];\r\n\r\n    if (!givenMolarMass || !findMolarMass || !stoicRatioGiven || !stoicRatioFind) {\r\n        console.error(\"Molar mass or stoichiometry missing for problem:\", problem, givenSubstance, findSubstance);\r\n        // Skip this question and try to generate another one\r\n        setProblemIndex(prev => prev + 1); \r\n        return;\r\n    }\r\n    \r\n    const roundingOptions = [\r\n      { type: 'default', precision: 3, textSuffix: '', placeholderSuffix: '(e.g., 1.234)' },\r\n      { type: 'tenth', precision: 1, textSuffix: ' Round to the nearest tenth.', placeholderSuffix: '(e.g., 1.2)' },\r\n      { type: 'hundredth', precision: 2, textSuffix: ' Round to the nearest hundredth.', placeholderSuffix: '(e.g., 1.23)' },\r\n    ];\r\n    const selectedRounding = roundingOptions[Math.floor(Math.random() * roundingOptions.length)];\r\n\r\n    const givenMass = parseFloat((Math.random() * 99 + 1).toFixed(2)); // Random mass between 1.00 and 100.00 g\r\n\r\n    // Calculation: Mass Given -> Moles Given -> Moles Find -> Mass Find\r\n    const molesGiven = givenMass / givenMolarMass;\r\n    const molesFind = (molesGiven / stoicRatioGiven) * stoicRatioFind;\r\n    const rawCorrectAnswer = molesFind * findMolarMass;\r\n    \r\n    const correctAnswer = parseFloat(rawCorrectAnswer.toFixed(selectedRounding.precision));\r\n\r\n    const questionText = `In the reaction: ${problem.equation}. If you start with ${givenMass.toFixed(2)} g of ${givenSubstance}, what mass of ${findSubstance} (in grams) will be produced/reacted?${selectedRounding.textSuffix}`;\r\n\r\n    setCurrentQuestion({\r\n      equation: problem.equation,\r\n      text: questionText,\r\n      correctAnswer, // Rounded as per instruction\r\n      rawCorrectAnswer, // Unrounded for default comparison\r\n      givenSubstance,\r\n      findSubstance,\r\n      givenMass,\r\n      givenMolarMass,\r\n      findMolarMass,\r\n      stoicRatioGiven,\r\n      stoicRatioFind,\r\n      roundingType: selectedRounding.type,\r\n      precision: selectedRounding.precision,\r\n      placeholderSuffix: selectedRounding.placeholderSuffix,\r\n    });\r\n    setUserAnswer('');\r\n    if (inputRef.current) {\r\n        inputRef.current.focus();\r\n    }\r\n  }, [problemIndex, currentProblemSet, score, questionsAttempted]);\r\n\r\n  useEffect(() => {\r\n    generateQuestion();\r\n  }, [generateQuestion, problemIndex]);\r\n\r\n  useEffect(() => {\r\n    if (setSavedState) {\r\n      setSavedState({\r\n        currentProblemSet, problemIndex, score, questionsAttempted,\r\n        userAnswer, feedback, showFeedback,\r\n      });\r\n    }\r\n  }, [currentProblemSet, problemIndex, score, questionsAttempted, userAnswer, feedback, showFeedback, setSavedState]);\r\n\r\n  const checkAnswer = (answerString) => {\r\n    if (!currentQuestion || showFeedback) return;\r\n\r\n    const answer = parseFloat(answerString);\r\n    if (isNaN(answer)) {\r\n      setFeedback({ type: 'incorrect', message: 'Please enter a valid number.' });\r\n      setShowFeedback(true);\r\n      return;\r\n    }\r\n\r\n    setQuestionsAttempted(prev => prev + 1);\r\n    const {\r\n        correctAnswer: instructedCorrectAnswer, rawCorrectAnswer, roundingType, precision,\r\n        givenSubstance, findSubstance, givenMass, givenMolarMass, findMolarMass,\r\n        stoicRatioGiven, stoicRatioFind, equation\r\n    } = currentQuestion;\r\n\r\n    let isCorrect = false;\r\n    if (roundingType === 'tenth' || roundingType === 'hundredth') {\r\n      isCorrect = Math.abs(parseFloat(answer.toFixed(precision)) - instructedCorrectAnswer) < (0.00001 / Math.pow(10, precision));\r\n    } else { // default\r\n       isCorrect = Math.abs(answer - rawCorrectAnswer) < 0.01 * rawCorrectAnswer || Math.abs(answer - rawCorrectAnswer) < 0.05;\r\n       if (!isCorrect && Math.abs(answer - instructedCorrectAnswer) < 0.0005) { // check against default rounded (3 places)\r\n        isCorrect = true;\r\n       }\r\n    }\r\n\r\n    if (isCorrect) {\r\n      setFeedback({ type: 'correct', message: 'Correct! Excellent work!' });\r\n      setScore(prev => prev + 1);\r\n    } else {\r\n      const finalCorrectAnswerDisplay = instructedCorrectAnswer.toFixed(precision);\r\n      const molesGivenCalc = givenMass / givenMolarMass;\r\n      const molesFindCalc = (molesGivenCalc / stoicRatioGiven) * stoicRatioFind;\r\n      \r\n      let explanation = `Let's solve for the mass of ${findSubstance} from ${givenMass.toFixed(2)} g of ${givenSubstance} in: ${equation}\\n\\n`;\r\n      explanation += `1. Convert mass of ${givenSubstance} to moles:\\n`;\r\n      explanation += `   Moles ${givenSubstance} = Mass / Molar Mass = ${givenMass.toFixed(2)} g / ${givenMolarMass.toFixed(3)} g/mol = ${molesGivenCalc.toFixed(4)} moles.\\n\\n`;\r\n      explanation += `2. Use stoichiometry to find moles of ${findSubstance}:\\n`;\r\n      explanation += `   Mole ratio from equation: ${stoicRatioGiven} moles ${givenSubstance} : ${stoicRatioFind} moles ${findSubstance}.\\n`;\r\n      explanation += `   Moles ${findSubstance} = (Moles ${givenSubstance} / ${stoicRatioGiven}) * ${stoicRatioFind} = (${molesGivenCalc.toFixed(4)} / ${stoicRatioGiven}) * ${stoicRatioFind} = ${molesFindCalc.toFixed(4)} moles.\\n\\n`;\r\n      explanation += `3. Convert moles of ${findSubstance} to mass:\\n`;\r\n      explanation += `   Mass ${findSubstance} = Moles * Molar Mass = ${molesFindCalc.toFixed(4)} moles * ${findMolarMass.toFixed(3)} g/mol = ${rawCorrectAnswer.toFixed(4)} g.\\n\\n`;\r\n\r\n      if (roundingType !== 'default') {\r\n        explanation += `4. Rounded to the nearest ${roundingType}: ${finalCorrectAnswerDisplay} g.\\n\\n`;\r\n      } else {\r\n        explanation += `4. The answer is approximately ${finalCorrectAnswerDisplay} g.\\n\\n`;\r\n      }\r\n      explanation += `So, the correct answer is ${finalCorrectAnswerDisplay} g.`;\r\n      \r\n      setFeedback({ type: 'incorrect', message: `Not quite.\\n${explanation}` });\r\n    }\r\n    setShowFeedback(true);\r\n  };\r\n\r\n  const handleUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!userAnswer.trim()) {\r\n        setFeedback({ type: 'incorrect', message: 'Please enter an answer.' });\r\n        setShowFeedback(true);\r\n        return;\r\n    }\r\n    checkAnswer(userAnswer);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setShowFeedback(false);\r\n    setFeedback(null);\r\n    if (problemIndex >= currentProblemSet.length - 1) {\r\n        setCurrentProblemSet(shuffleArray([...MASS_TO_MASS_PROBLEMS]));\r\n        setProblemIndex(0);\r\n    } else {\r\n        setProblemIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  if (!currentQuestion && !(showFeedback && feedback?.type === 'info')) {\r\n    return <div className=\"center-container\"><p>Loading mass-to-mass calculation question...</p></div>;\r\n  }\r\n  \r\n  if (showFeedback && feedback?.type === 'info') {\r\n    return (\r\n      <div className=\"activity-container\">\r\n        <div className=\"activity-card\" style={{ textAlign: 'center' }}>\r\n          <h2 className=\"activity-title\" style={{ fontSize: '1.8em' }}>Set Complete!</h2>\r\n          <div className={`feedback-container feedback-${feedback.type}`} style={{ margin: '20px 0', padding: '15px', borderRadius: '8px' }}>\r\n            <p style={{ fontSize: '1.1em' }}>{feedback.message}</p>\r\n          </div>\r\n          <button className=\"activity-btn\" onClick={handleNextQuestion}>Start New Set</button>\r\n          <button className=\"back-btn\" style={{ marginLeft: '15px' }} onClick={onBack}>Back to Topics</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"activity-container\">\r\n      <div className=\"activity-card\">\r\n        <h2 className=\"activity-title\">Mass-to-Mass Calculations</h2>\r\n        \r\n        {currentQuestion && (\r\n          <>\r\n            <div className=\"question-area\">\r\n              <p className=\"question-equation\" style={{ marginBottom: '15px' }}>\r\n                Reaction: {currentQuestion.equation.split(' ').map((part, index) => \r\n                  !isNaN(parseInt(part)) && parseInt(part) === parseFloat(part) && (index === 0 || currentQuestion.equation.split(' ')[index-1] === '→' || currentQuestion.equation.split(' ')[index-1] === '+')\r\n                  ? <strong key={index}>{part} </strong> \r\n                  : <span key={index}>{part} </span>\r\n                )}\r\n              </p>\r\n              <p className=\"question-text\" style={{ fontSize: '1.1em' }}>{currentQuestion.text}</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleUserSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\r\n              <input\r\n                ref={inputRef}\r\n                type=\"number\"\r\n                step=\"any\"\r\n                value={userAnswer}\r\n                onChange={(e) => setUserAnswer(e.target.value)}\r\n                placeholder={`Your answer (grams) ${currentQuestion.placeholderSuffix || ''}`}\r\n                className=\"activity-input\"\r\n                style={{ margin: '10px 0 20px 0' }}\r\n                disabled={showFeedback}\r\n              />\r\n\r\n              {showFeedback && feedback && (\r\n                <div className={`feedback-container feedback-${feedback.type}`}>\r\n                  <h3>{feedback.type === 'correct' ? 'Correct!' : feedback.type === 'incorrect' ? 'Incorrect.' : 'Info:'}</h3>\r\n                  <p>{feedback.message}</p>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"button-row\">\r\n                {showFeedback ? (\r\n                  <button type=\"button\" className=\"activity-btn\" onClick={handleNextQuestion}>Next Question</button>\r\n                ) : (\r\n                  <button type=\"submit\" className=\"activity-btn\" disabled={!userAnswer || showFeedback}>Submit</button>\r\n                )}\r\n                {onShowPeriodicTable && (\r\n                     <button type=\"button\" className=\"activity-btn\" onClick={onShowPeriodicTable}>Periodic Table</button>\r\n                )}\r\n                <button type=\"button\" className=\"back-btn\" onClick={onBack}>Back to Topics</button>\r\n              </div>\r\n            </form>\r\n            <p className=\"score-display\">Score: {score} / {questionsAttempted}</p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMassToMassActivity.propTypes = {\r\n  onBack: PropTypes.func.isRequired,\r\n  onShowPeriodicTable: PropTypes.func,\r\n  savedState: PropTypes.object,\r\n  setSavedState: PropTypes.func,\r\n};\r\n\r\nMassToMassActivity.defaultProps = {\r\n  onShowPeriodicTable: null,\r\n  savedState: null,\r\n  setSavedState: () => {},\r\n}; "],"names":["shuffleArray","array","randomIndex","currentIndex","length","Math","floor","random","MOLAR_MASSES","H2","O2","H2O","N2","NH3","CH4","CO2","KClO3","KCl","Fe2O3","CO","Fe","C3H8","Al","Cl2","AlCl3","Zn","HCl","ZnCl2","AgNO3","NaCl","AgCl","NaNO3","C6H12O6","SO2","SO3","P4","P4O10","WO3","W","C2H5OH","SiCl4","Mg","Si","MgCl2","Na","I2","MgI2","C2H2","CS2","Sn","SnCl4","CaCl2","Na3PO4","Ca3PO4_2","AlOH3","H2SO4","Al2SO4_3","C2H4","NaBr","Br2","HgO","Hg","BaCl2","Na2SO4","BaSO4","NH4NO3","N2O","C6H6","C6H5Cl","KBr","KI","SiO2","C","PbNO3_2","PbI2","KNO3","MgOH2","C5H12","NaOH","S","FeS","HBr","SF6","PCl5","NO2","KMnO4","NaHCO3","Al2O3","CuSO4","CH3COOH","MASS_TO_MASS_PROBLEMS","equation","stoichiometry","substances","MassToMassActivity","_ref","onBack","onShowPeriodicTable","savedState","setSavedState","currentProblemSet","setCurrentProblemSet","useState","problemIndex","setProblemIndex","currentQuestion","setCurrentQuestion","userAnswer","setUserAnswer","feedback","setFeedback","showFeedback","setShowFeedback","score","setScore","questionsAttempted","setQuestionsAttempted","inputRef","useRef","generateQuestion","useCallback","type","message","problem","substancesInProblem","givenSubstance","findSubstance","givenMolarMass","findMolarMass","stoicRatioGiven","stoicRatioFind","console","error","prev","roundingOptions","precision","textSuffix","placeholderSuffix","selectedRounding","givenMass","parseFloat","toFixed","rawCorrectAnswer","correctAnswer","questionText","text","roundingType","current","focus","useEffect","handleNextQuestion","_jsx","className","children","_jsxs","style","textAlign","fontSize","margin","padding","borderRadius","onClick","marginLeft","_Fragment","marginBottom","split","map","part","index","isNaN","parseInt","onSubmit","e","preventDefault","trim","answerString","answer","instructedCorrectAnswer","isCorrect","abs","pow","finalCorrectAnswerDisplay","molesGivenCalc","molesFindCalc","explanation","checkAnswer","display","flexDirection","alignItems","width","ref","step","value","onChange","target","placeholder","disabled","defaultProps"],"sourceRoot":""}